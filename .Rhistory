library("BiocParallel")
library(RColorBrewer)
library(Glimma)
register(MulticoreParam(4))
setwd("~/Research-Local/RNAseq-Local/Inputs/NigerianTCGA_quants-proteincoding-IHC")
FOLDER <- "/Users/parajago/Research-Local/RNAseq-Local/Inputs/NigerianTCGA_quants-proteincoding-IHC"
sampleFiles <- grep("htseq.counts",list.files(FOLDER),value=TRUE)
#Differential gene expression setup based on race (b/w/other)
sampleConditionrace <- sampleFiles
countVar2=1
for (sample in sampleConditionrace){
if (stri_detect_fixed(sample,"LIB")==TRUE){
sampleConditionrace[countVar2] <- "Nigerian"
countVar2=countVar2+1
} else if (stri_detect_fixed(sample,"black")==TRUE){
sampleConditionrace[countVar2] <- "TCGA_black"
countVar2=countVar2+1
} else if (stri_detect_fixed(sample,"white")==TRUE){
sampleConditionrace[countVar2] <- "TCGA_white"
countVar2=countVar2+1
} else{
sampleConditionrace[countVar2] <- "TCGA_other"
countVar2=countVar2+1
}
}
#Condition based on IHC subtype
sampleConditionIHC <- sampleFiles
countVar2=1
for (sample in sampleConditionIHC){
if (stri_detect_fixed(sample,"Her2")==TRUE){
sampleConditionIHC[countVar2] <- "Her2"
countVar2=countVar2+1
} else if (stri_detect_fixed(sample,"TNBC")==TRUE){
sampleConditionIHC[countVar2] <- "TNBC"
countVar2=countVar2+1
} else if (stri_detect_fixed(sample,"HRpos")==TRUE){
sampleConditionIHC[countVar2] <- "HRpos"
countVar2=countVar2+1
} else if (stri_detect_fixed(sample,"TPBC")==TRUE){
sampleConditionIHC[countVar2] <- "TPBC"
countVar2=countVar2+1
} else{
sampleConditionIHC[countVar2] <- "Other"
countVar2=countVar2+1
}
}
#Condition based on batch (relevant to the Nigerian patients only; no difference in batch for the TCGA patients)
batchval <- sampleFiles
countVar2=1
for (sample in batchval){
if (stri_detect_fixed(sample,"batch1")==TRUE){
batchval[countVar2] <- "batch1"
countVar2=countVar2+1
} else if (stri_detect_fixed(sample,"batch23")==TRUE){
batchval[countVar2] <- "batch23"
countVar2=countVar2+1
} else if (stri_detect_fixed(sample,"batch4")==TRUE){
batchval[countVar2] <- "batch4"
countVar2=countVar2+1
} else if (stri_detect_fixed(sample,"batch5")==TRUE){
batchval[countVar2] <- "batch5"
countVar2=countVar2+1
} else{
batchval[countVar2] <- "batchT"
countVar2=countVar2+1
}
}
sampleLOH <-sampleFiles
countVar2=1
for (sample in sampleLOH){
if (stri_detect_fixed(sample,"noLOH")==TRUE){
sampleLOH[countVar2] <- "noLOH"
countVar2=countVar2+1
} else if (stri_detect_fixed(sample,"LOH")==TRUE){
sampleLOH[countVar2] <- "LOH"
countVar2=countVar2+1
} else{
sampleLOH[countVar2] <- NA
countVar2=countVar2+1
}
}
table(sampleConditionrace, sampleConditionIHC)
sampleTable <- data.frame(sampleName=gsub(".htseq.counts","",sampleFiles),
fileName=sampleFiles,
condition1=sampleConditionrace,
condition2=sampleConditionIHC,
condition3=sampleLOH,
batch=batchval)
sampleTable$sampleCondition <- paste(sampleTable$condition1, sampleTable$condition2, sep=".")
ddsHTSeqMF <- DESeqDataSetFromHTSeqCount(sampleTable=sampleTable,
directory=FOLDER,
design=~sampleCondition)
ddsHTSeqMF <- ddsHTSeqMF[rowSums(counts(ddsHTSeqMF)) > 0, ] #Pre-filtering the dataset by removing the rows without any  information about gene expression -> this removes 677 genes
countmatrix <- assay(ddsHTSeqMF) #Raw counts organized into matrix format from individual files
countmatrix2 <- log2(countmatrix + 1) #Basic transformation of the count data
plot(density(countmatrix2[,1]),lwd=3,ylim=c(0,.30), main="Density of counts with log2[count]+1 transformation ONLY")
for(i in 1:116){lines(density(countmatrix2[,i]),lwd=3)} #This demonstrates that there is a difference in distributions between the Nigerian and TCGA data with basic log transformation normalization
norm_countmatrix <- as.matrix(countmatrix2)
norm_countmatrix = normalize.quantiles(norm_countmatrix)
plot(density(norm_countmatrix[,1]),lwd=3,ylim=c(0,.3), main="Density of counts with quantile normalization")
for(i in 1:116){lines(density(norm_countmatrix[,i]),lwd=3)} #This demonstrates the effect of comparative quantile normalization
colnames (norm_countmatrix) <- colnames (countmatrix2)
rownames (norm_countmatrix) <- rownames (countmatrix2)
norm_countmatrix <- as.data.frame(norm_countmatrix)
countmatrixNigerian <- dplyr::select(norm_countmatrix, contains("LIB"))
plot(density(countmatrixNigerian[,1]),lwd=3,ylim=c(0,.3), main="Density of counts with quantile normalization - Nigerian")
for(i in 1:48){lines(density(countmatrixNigerian[,i]),lwd=3)} #This demonstrates the result of the normalized Nigerian counts separately
tcgacolnames <- colnames(countmatrix)
tcgacolnames <- setdiff(tcgacolnames, colnames(countmatrixNigerian))
countmatrixTCGA <- norm_countmatrix[ , tcgacolnames]
plot(density(countmatrixTCGA[,1]),lwd=3,ylim=c(0,.3), main="Density of counts with quantile normalization - TCGA")
for(i in 1:68){lines(density(countmatrixTCGA[,i]),lwd=3)} #This demonstrates the result of the normalized TCGA counts separately
norm_countmatrix <- as.data.frame(norm_countmatrix)
t_norm_countmatrix <- t(norm_countmatrix)
t_norm_countmatrix <- cbind (t_norm_countmatrix, sampleTable) #This binds the characteristics of the original patients to the quantile normalized counts. CBinding was checked to make sure that patients were correctly aligned to characteristics.
quant.pca <- prcomp(t_norm_countmatrix[,1:19650])
autoplot(quant.pca, data=t_norm_countmatrix, colour='sampleCondition', main="PCA of quantile normalization results prior to DE analysis")
annotation <- as.data.frame(row.names(countmatrix))
colnames(annotation) <- c("GeneID")
annotation$temp <- gsub("[.].+", "", annotation[,1])
annotation$symbol <- mapIds(EnsDb.Hsapiens.v75,
keys=annotation$temp,
column="SYMBOL",
keytype="GENEID",
multiVals="first")
annotation$symbol <- mapIds(EnsDb.Hsapiens.v75,
keys=annotation$temp,
column="SYMBOL",
keytype="GENEID",
multiVals="first")
annotation$chr <- mapIds(EnsDb.Hsapiens.v75,
keys=annotation$temp,
column="SEQNAME",
keytype="GENEID",
multiVals="first")
annotation$locstart <- mapIds(EnsDb.Hsapiens.v75,
keys=annotation$temp,
column="GENESEQSTART",
keytype="GENEID",
multiVals="first")
annotation$locend <- mapIds(EnsDb.Hsapiens.v75,
keys=annotation$temp,
column="GENESEQEND",
keytype="GENEID",
multiVals="first")
annotation$temp <- NULL
design <- t_norm_countmatrix
design <- design %>% dplyr::select(sampleCondition)
designNvsT <- t_norm_countmatrix
designNvsT <- designNvsT %>% dplyr::select(condition1)
designNvsT$condition1 <- ifelse (designNvsT$condition1=="TCGA_white", 0, as.character(designNvsT$condition1))
designNvsT$condition1 <- ifelse (designNvsT$condition1=="TCGA_black", 1, as.character(designNvsT$condition1))
designNvsT$condition1 <- ifelse (designNvsT$condition1=="Nigerian", 2, as.character(designNvsT$condition1))
designNvsT$TCGA_white <- ifelse (designNvsT$condition1==0, 1, 0)
designNvsT$TCGA_black <- ifelse (designNvsT$condition1==1, 1, 0)
designNvsT$Nigerian <- ifelse (designNvsT$condition1==2, 1, 0)
designNvsT$condition1 <- NULL
mm <- model.matrix(~0+designNvsT$TCGA_white+designNvsT$TCGA_black+designNvsT$Nigerian)
quantids <- rownames(designNvsT)
rownames(mm) <- quantids
colnames(mm) <- c("TCGA_white", "TCGA_black", "Nigerian")
quantdata <- as.data.frame(t(counts(ddsHTSeqMF)))
quantdata <- quantdata[quantids,]
quantdata <- t(quantdata)
d0 <- DGEList(counts=quantdata, genes=annotation)
dim(d0)
cutoff <- 10
drop <- which(apply(cpm(d0), 1, max) < cutoff)
d <- d0[-drop,]
dim(d) # Number of genes after taking out low expressed genes
v=voom(d,designNvsT,plot=T, normalize="quantile")
contr.matrix <- makeContrasts(TCGA_white-Nigerian,levels=colnames(designNvsT))
fit <- lmFit(v, designNvsT)
fit <- contrasts.fit(fit, contrasts=contr.matrix)
fit <- eBayes(fit, trend=TRUE)
dt <- decideTests(fit)
summary(dt)
hist(fit$p.value, ylim=c(0,3000), main="Histogram of unadjusted p-values of differential gene expression between breast cancers in\n Nigerian vs. TCGA white breast cancer patients\n quantile corrected")
qvals<-p.adjust(fit$p.value[,1], method='fdr')
df_limma <- data_frame(log2FoldChange = fit$coefficients[,1],
pval = fit$p.value[,1],
padj = qvals,
anno = fit$genes)
with(df_limma, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between \nbreast cancers in Nigerian and TCGA white patients\nquantile corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), points(log2FoldChange, -log10(padj), pch=20, col="blue"))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), textxy(log2FoldChange, -log10(padj), labs=anno$symbol, cex=.5))
df_limmaprint <- as.data.frame(df_limma)
df_limmaprint <- df_limmaprint %>% arrange(log2FoldChange) %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(abs(log2FoldChange)>0.58)
top_n(df_limmaprint, 10, log2FoldChange)
top_n(df_limmaprint, -10, log2FoldChange)
write.csv(df_limmaprint, file = "TCGAwhite-Nigerian-all-DE.csv", row.names = FALSE)
contr.matrix <- makeContrasts(TCGA_black-Nigerian,levels=colnames(designNvsT))
fit <- lmFit(v, designNvsT)
fit <- contrasts.fit(fit, contrasts=contr.matrix)
fit <- eBayes(fit, trend=TRUE)
dt <- decideTests(fit)
summary(dt)
hist(fit$p.value, ylim=c(0,3000), main="Histogram of unadjusted p-values of differential gene expression between breast cancers in\n Nigerian vs. TCGA black breast cancer patients\n quantile corrected")
qvals<-p.adjust(fit$p.value[,1], method='fdr')
df_limma <- data_frame(log2FoldChange = fit$coefficients[,1],
pval = fit$p.value[,1],
padj = qvals,
anno = fit$genes)
with(df_limma, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between \nbreast cancers in Nigerian and TCGA black patients\nquantile corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), points(log2FoldChange, -log10(padj), pch=20, col="blue"))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), textxy(log2FoldChange, -log10(padj), labs=anno$symbol, cex=.5))
df_limmaprint <- as.data.frame(df_limma)
df_limmaprint <- df_limmaprint %>% arrange(log2FoldChange) %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(abs(log2FoldChange)>0.58)
top_n(df_limmaprint, 10, log2FoldChange)
top_n(df_limmaprint, -10, log2FoldChange)
write.csv(df_limmaprint, file = "TCGAblack-Nigerian-all-DE.csv", row.names = FALSE)
designNvsW <- design
designNvsW$sampleCondition <- ifelse (designNvsW$sampleCondition=="TCGA_white.TNBC", 0, as.character(designNvsW$sampleCondition))
designNvsW$sampleCondition <- ifelse (designNvsW$sampleCondition=="Nigerian.TNBC", 1, as.character(designNvsW$sampleCondition))
designNvsW$sampleCondition <- ifelse (designNvsW$sampleCondition==0 | designNvsW$sampleCondition==1, designNvsW$sampleCondition, NA)
designNvsW <- designNvsW %>% subset(is.na(sampleCondition)==FALSE)
designNvsW$TCGA_white.TNBC <- ifelse (designNvsW$sampleCondition==0, 1, 0)
designNvsW$Nigerian.TNBC <- ifelse (designNvsW$sampleCondition==1, 1, 0)
designNvsW$sampleCondition <- NULL
mm <- model.matrix(~0+designNvsW$TCGA_white.TNBC+designNvsW$Nigerian.TNBC)
quantids <- rownames(designNvsW)
rownames(mm) <- quantids
colnames(mm) <- c("TCGA_white", "Nigerian")
quantdata <- as.data.frame(t(counts(ddsHTSeqMF)))
quantdata <- quantdata[quantids,]
quantdata <- t(quantdata)
d0 <- DGEList(counts=quantdata, genes=annotation)
cutoff <- 10
drop <- which(apply(cpm(d0), 1, max) < cutoff)
d <- d0[-drop,]
dim(d) # Number of genes after taking out low expressed genes
v=voom(d,designNvsW,plot=T, normalize="quantile")
contr.matrix <- makeContrasts(TCGA_white.TNBC-Nigerian.TNBC, levels=colnames(designNvsW))
fit <- lmFit(v, designNvsW)
fit <- contrasts.fit(fit, contrasts=contr.matrix)
fit <- eBayes(fit)
dt <- decideTests(fit)
summary(dt)
hist(fit$p.value, ylim=c(0,3000), main="Histogram of unadjusted p-values of differential gene expression\n between TNBC breast cancers in Nigerian and TCGA white patients\n quantile corrected")
qvals<-p.adjust(fit$p.value[,1], method='fdr')
df_limma <- data_frame(log2FoldChange = fit$coefficients[,1],
pval = fit$p.value[,1],
padj = qvals,
anno = fit$genes)
with(df_limma, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between TNBC \nbreast cancers in Nigerian and TCGA white breast cancer patients\nquantile corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), points(log2FoldChange, -log10(padj), pch=20, col="blue"))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), textxy(log2FoldChange, -log10(padj), labs=anno$symbol, cex=.5))
df_limmaprint <- as.data.frame(df_limma)
df_limmaprint <- df_limmaprint %>% arrange(log2FoldChange) %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(abs(log2FoldChange)>0.58)
top_n(df_limmaprint, 10, log2FoldChange)
top_n(df_limmaprint, -10, log2FoldChange)
write.csv(df_limmaprint, file = "Nigerian-TCGAwhite-TNBC.csv", row.names = FALSE)
designNvsB <- design
designNvsB$sampleCondition <- ifelse (designNvsB$sampleCondition=="TCGA_black.TNBC", 0, as.character(designNvsB$sampleCondition))
designNvsB$sampleCondition <- ifelse (designNvsB$sampleCondition=="Nigerian.TNBC", 1, as.character(designNvsB$sampleCondition))
designNvsB$sampleCondition <- ifelse (designNvsB$sampleCondition==0 | designNvsB$sampleCondition==1, designNvsB$sampleCondition, NA)
designNvsB <- designNvsB %>% subset(is.na(sampleCondition)==FALSE)
designNvsB$TCGA_black.TNBC <- ifelse (designNvsB$sampleCondition==0, 1, 0)
designNvsB$Nigerian.TNBC <- ifelse (designNvsB$sampleCondition==1, 1, 0)
designNvsB$sampleCondition <- NULL
mm <- model.matrix(~0+designNvsB$TCGA_black.TNBC+designNvsB$Nigerian.TNBC)
quantids <- rownames(designNvsB)
rownames(mm) <- quantids
colnames(mm) <- c("TCGA_black", "Nigerian")
quantdata <- as.data.frame(t(counts(ddsHTSeqMF)))
quantdata <- quantdata[quantids,]
quantdata <- t(quantdata)
d0 <- DGEList(counts=quantdata, genes=annotation)
cutoff <- 10
drop <- which(apply(cpm(d0), 1, max) < cutoff)
d <- d0[-drop,]
dim(d) # Number of genes after taking out low expressed genes
v=voom(d,designNvsB,plot=T, normalize="quantile")
contr.matrix <- makeContrasts(TCGA_black.TNBC-Nigerian.TNBC, levels=colnames(designNvsB))
fit <- lmFit(v, designNvsB)
fit <- contrasts.fit(fit, contrasts=contr.matrix)
fit <- eBayes(fit)
dt <- decideTests(fit)
summary(dt)
hist(fit$p.value, ylim=c(0,3000), main="Histogram of unadjusted p-values of differential gene expression\n between TNBC breast cancers in Nigerian and TCGA black patients\n quantile corrected")
qvals<-p.adjust(fit$p.value[,1], method='fdr')
df_limma <- data_frame(log2FoldChange = fit$coefficients[,1],
pval = fit$p.value[,1],
padj = qvals,
anno = fit$genes)
with(df_limma, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between TNBC \nbreast cancers in Nigerian and TCGA black breast cancer patients\nquantile corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), points(log2FoldChange, -log10(padj), pch=20, col="blue"))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), textxy(log2FoldChange, -log10(padj), labs=anno$symbol, cex=.5))
df_limmaprint <- as.data.frame(df_limma)
df_limmaprint <- df_limmaprint %>% arrange(log2FoldChange) %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(abs(log2FoldChange)>0.58)
top_n(df_limmaprint, 10, log2FoldChange)
top_n(df_limmaprint, -10, log2FoldChange)
write.csv(df_limmaprint, file = "Nigerian-TCGAblack-TNBC.csv", row.names = FALSE)
designNvsWHR <- design
designNvsWHR$sampleCondition <- ifelse (designNvsWHR$sampleCondition=="TCGA_white.HRpos", 0, as.character(designNvsWHR$sampleCondition))
designNvsWHR$sampleCondition <- ifelse (designNvsWHR$sampleCondition=="Nigerian.HRpos", 1, as.character(designNvsWHR$sampleCondition))
designNvsWHR$sampleCondition <- ifelse (designNvsWHR$sampleCondition==0 | designNvsWHR$sampleCondition==1, designNvsWHR$sampleCondition, NA)
designNvsWHR <- designNvsWHR %>% subset(is.na(sampleCondition)==FALSE)
designNvsWHR$TCGA_white.HRpos <- ifelse (designNvsWHR$sampleCondition==0, 1, 0)
designNvsWHR$Nigerian.HRpos <- ifelse (designNvsWHR$sampleCondition==1, 1, 0)
designNvsWHR$sampleCondition <- NULL
mm <- model.matrix(~0+designNvsWHR$TCGA_white.HRpos+designNvsWHR$Nigerian.HRpos)
quantids <- rownames(designNvsWHR)
rownames(mm) <- quantids
colnames(mm) <- c("TCGA_white", "Nigerian")
quantdata <- as.data.frame(t(counts(ddsHTSeqMF)))
quantdata <- quantdata[quantids,]
quantdata <- t(quantdata)
d0 <- DGEList(counts=quantdata, genes=annotation)
cutoff <- 10
drop <- which(apply(cpm(d0), 1, max) < cutoff)
d <- d0[-drop,]
dim(d) # Number of genes after taking out low expressed genes
v=voom(d,designNvsWHR,plot=T, normalize="quantile")
contr.matrix <- makeContrasts(TCGA_white.HRpos-Nigerian.HRpos, levels=colnames(designNvsWHR))
fit <- lmFit(v, designNvsWHR)
fit <- contrasts.fit(fit, contrasts=contr.matrix)
fit <- eBayes(fit)
dt <- decideTests(fit)
summary(dt)
hist(fit$p.value, ylim=c(0,3000), main="Histogram of unadjusted p-values of differential gene expression\n between HR-positive breast cancers in Nigerian and TCGA white patients\n quantile corrected")
qvals<-p.adjust(fit$p.value[,1], method='fdr')
df_limma <- data_frame(log2FoldChange = fit$coefficients[,1],
pval = fit$p.value[,1],
padj = qvals,
anno = fit$genes)
with(df_limma, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between HR-postive \nbreast cancers in Nigerian and TCGA white breast cancer patients\nquantile corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), points(log2FoldChange, -log10(padj), pch=20, col="blue"))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), textxy(log2FoldChange, -log10(padj), labs=anno$symbol, cex=.5))
df_limmaprint <- as.data.frame(df_limma)
df_limmaprint <- df_limmaprint %>% arrange(log2FoldChange) %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(abs(log2FoldChange)>0.58)
top_n(df_limmaprint, 10, log2FoldChange)
top_n(df_limmaprint, -10, log2FoldChange)
write.csv(df_limmaprint, file = "TCGA_white-Nigerian-HRpos.csv", row.names = FALSE)
designNvsBHR <- design
designNvsBHR$sampleCondition <- ifelse (designNvsBHR$sampleCondition=="TCGA_black.HRpos", 0, as.character(designNvsBHR$sampleCondition))
designNvsBHR$sampleCondition <- ifelse (designNvsBHR$sampleCondition=="Nigerian.HRpos", 1, as.character(designNvsBHR$sampleCondition))
designNvsBHR$sampleCondition <- ifelse (designNvsBHR$sampleCondition==0 | designNvsBHR$sampleCondition==1, designNvsBHR$sampleCondition, NA)
designNvsBHR <- designNvsBHR %>% subset(is.na(sampleCondition)==FALSE)
designNvsBHR$TCGA_black.HRpos <- ifelse (designNvsBHR$sampleCondition==0, 1, 0)
designNvsBHR$Nigerian.HRpos <- ifelse (designNvsBHR$sampleCondition==1, 1, 0)
designNvsBHR$sampleCondition <- NULL
mm <- model.matrix(~0+designNvsBHR$TCGA_black.HRpos+designNvsBHR$Nigerian.HRpos)
quantids <- rownames(designNvsBHR)
rownames(mm) <- quantids
colnames(mm) <- c("TCGA_black", "Nigerian")
quantdata <- as.data.frame(t(counts(ddsHTSeqMF)))
quantdata <- quantdata[quantids,]
quantdata <- t(quantdata)
d0 <- DGEList(counts=quantdata, genes=annotation)
cutoff <- 10
drop <- which(apply(cpm(d0), 1, max) < cutoff)
d <- d0[-drop,]
dim(d) # Number of genes after taking out low expressed genes
v=voom(d,designNvsBHR,plot=T, normalize="quantile")
contr.matrix <- makeContrasts(TCGA_black.HRpos-Nigerian.HRpos, levels=colnames(designNvsBHR))
fit <- lmFit(v, designNvsBHR)
fit <- contrasts.fit(fit, contrasts=contr.matrix)
fit <- eBayes(fit)
dt <- decideTests(fit)
summary(dt)
hist(fit$p.value, ylim=c(0,3000), main="Histogram of unadjusted p-values of differential gene expression\n between HR-positive breast cancers in Nigerian and TCGA black patients\n quantile corrected")
qvals<-p.adjust(fit$p.value[,1], method='fdr')
df_limma <- data_frame(log2FoldChange = fit$coefficients[,1],
pval = fit$p.value[,1],
padj = qvals,
anno = fit$genes)
with(df_limma, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between HR-positive \nbreast cancers in Nigerian and TCGA black breast cancer patients\nquantile corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), points(log2FoldChange, -log10(padj), pch=20, col="blue"))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), textxy(log2FoldChange, -log10(padj), labs=anno$symbol, cex=.5))
df_limmaprint <- as.data.frame(df_limma)
df_limmaprint <- df_limmaprint %>% arrange(log2FoldChange) %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(abs(log2FoldChange)>0.58)
top_n(df_limmaprint, 10, log2FoldChange)
top_n(df_limmaprint, -10, log2FoldChange)
write.csv(df_limmaprint, file = "TCGAblack-Nigerian-HRpos.csv", row.names = FALSE)
designNvsWHER2 <- design
designNvsWHER2$sampleCondition <- ifelse (designNvsWHER2$sampleCondition=="TCGA_white.Her2", 0, as.character(designNvsWHER2$sampleCondition))
designNvsWHER2$sampleCondition <- ifelse (designNvsWHER2$sampleCondition=="Nigerian.Her2", 1, as.character(designNvsWHER2$sampleCondition))
designNvsWHER2$sampleCondition <- ifelse (designNvsWHER2$sampleCondition==0 | designNvsWHER2$sampleCondition==1, designNvsWHER2$sampleCondition, NA)
designNvsWHER2 <- designNvsWHER2 %>% subset(is.na(sampleCondition)==FALSE)
designNvsWHER2$TCGA_white.Her2 <- ifelse (designNvsWHER2$sampleCondition==0, 1, 0)
designNvsWHER2$Nigerian.Her2 <- ifelse (designNvsWHER2$sampleCondition==1, 1, 0)
designNvsWHER2$sampleCondition <- NULL
mm <- model.matrix(~0+designNvsWHER2$TCGA_white.Her2+designNvsWHER2$Nigerian.Her2)
quantids <- rownames(designNvsWHER2)
rownames(mm) <- quantids
colnames(mm) <- c("TCGA_white", "Nigerian")
quantdata <- as.data.frame(t(counts(ddsHTSeqMF)))
quantdata <- quantdata[quantids,]
quantdata <- t(quantdata)
d0 <- DGEList(counts=quantdata, genes=annotation)
cutoff <- 10
drop <- which(apply(cpm(d0), 1, max) < cutoff)
d <- d0[-drop,]
dim(d) # Number of genes after taking out low expressed genes
v=voom(d,designNvsWHER2,plot=T, normalize="quantile")
contr.matrix <- makeContrasts(TCGA_white.Her2-Nigerian.Her2, levels=colnames(designNvsWHER2))
fit <- lmFit(v, designNvsWHER2)
fit <- contrasts.fit(fit, contrasts=contr.matrix)
fit <- eBayes(fit)
dt <- decideTests(fit)
summary(dt)
hist(fit$p.value, ylim=c(0,3000), main="Histogram of unadjusted p-values of differential gene expression\n between Her2+ breast cancers in Nigerian and TCGA white patients\n quantile corrected")
qvals<-p.adjust(fit$p.value[,1], method='fdr')
df_limma <- data_frame(log2FoldChange = fit$coefficients[,1],
pval = fit$p.value[,1],
padj = qvals,
anno = fit$genes)
with(df_limma, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between Her2+ \nbreast cancers in Nigerian and TCGA white breast cancer patients\nquantile corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), points(log2FoldChange, -log10(padj), pch=20, col="blue"))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), textxy(log2FoldChange, -log10(padj), labs=anno$symbol, cex=.5))
df_limmaprint <- as.data.frame(df_limma)
df_limmaprint <- df_limmaprint %>% arrange(log2FoldChange) %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(abs(log2FoldChange)>0.58)
top_n(df_limmaprint, 10, log2FoldChange)
top_n(df_limmaprint, -10, log2FoldChange)
write.csv(df_limmaprint, file = "TCGAwhite-Nigerian-Her2.csv", row.names = FALSE)
design <- t_norm_countmatrix
designNvsTLOH <- design %>% dplyr::select(condition3)
designNvsTLOH$condition3 <- ifelse (designNvsTLOH$condition3=="noLOH", 0, as.character(designNvsTLOH$condition3))
designNvsTLOH$condition3 <- ifelse (designNvsTLOH$condition3=="LOH", 1, as.character(designNvsTLOH$condition3))
designNvsTLOH$condition3 <- ifelse (designNvsTLOH$condition3==0 | designNvsTLOH$condition3==1, designNvsTLOH$condition3, NA)
designNvsTLOH <- designNvsTLOH %>% subset(is.na(condition3)==FALSE)
designNvsTLOH$noLOH <- ifelse (designNvsTLOH$condition3==0, 1, 0)
designNvsTLOH$LOH <- ifelse (designNvsTLOH$condition3==1, 1, 0)
designNvsTLOH$condition3 <- NULL
mm <- model.matrix(~0+designNvsTLOH$noLOH+designNvsTLOH$LOH)
quantids <- rownames(designNvsTLOH)
rownames(mm) <- quantids
colnames(mm) <- c("noLOH", "LOH")
quantdata <- as.data.frame(t(counts(ddsHTSeqMF)))
quantdata <- quantdata[quantids,]
quantdata <- t(quantdata)
d0 <- DGEList(counts=quantdata, genes=annotation)
cutoff <- 10
drop <- which(apply(cpm(d0), 1, max) < cutoff)
d <- d0[-drop,]
dim(d) # Number of genes after taking out low expressed genes
v=voom(d,designNvsTLOH,plot=T, normalize="quantile")
contr.matrix <- makeContrasts(noLOH-LOH, levels=colnames(designNvsTLOH))
fit <- lmFit(v, designNvsTLOH)
fit <- contrasts.fit(fit, contrasts=contr.matrix)
fit <- eBayes(fit)
dt <- decideTests(fit)
summary(dt)
sampleTable2 <- data.frame(sampleName=gsub(".htseq.counts","",sampleFiles),
fileName=sampleFiles,
sampleCondition=sampleLOH)
sampleTable2 <- sampleTable2 %>% subset(is.na(sampleCondition)==FALSE)
ddsHTSeqMF2 <- DESeqDataSetFromHTSeqCount(
sampleTable=sampleTable2,
directory=FOLDER,
design=~sampleCondition)
ddsHTSeqMF2 <- ddsHTSeqMF2[rowSums(counts(ddsHTSeqMF2)) > 0, ] #Pre-filtering the dataset by removing the rows without any  information about gene expression
dds <- estimateSizeFactors(ddsHTSeqMF2) #The size factor is the median ratio of the sample over a "pseudosample": for each gene, the geometric mean of all samples. This accounts for sequencing depth.
vsd <- vst(ddsHTSeqMF2, blind=FALSE) #Variance-stabilizing transformation, only using this since >50 samples
plotPCA(vsd, intgroup=c("sampleCondition"))
ddsMF <- DESeq(ddsHTSeqMF2)
resultsNames(ddsMF)
fc = 0.58 #Subsequent threshold of signifcance for log2 fold change -> 0.58 = log2(1.5)
fdr = 0.05 #Subsequent threshold of significance for p-value (adjusted by FDR)
cat("MA Plot: Differential expression based on 14q LOH presence")
res <- lfcShrink(ddsMF, coef="sampleCondition_noLOH_vs_LOH", type="ashr", optmethod = "mixEM")
DESeq2::plotMA(res, ylim=c(-10,10), xlim=c(0.1,200))
diffLOH<- results(ddsMF, contrast=c("sampleCondition", "noLOH", "LOH"), alpha=0.05)
nrow(diffLOH)
diffLOH <- diffLOH[(diffLOH$log2FoldChange >= fc | diffLOH$log2FoldChange <= -fc),]
diffLOH <- subset(diffLOH, padj < fdr)
nrow(diffLOH)
restemp <- lfcShrink(ddsMF, contrast=c("sampleCondition", "noLOH", "LOH"), res = diffLOH, type="ashr", optmethod = "mixEM")
restemp$temp <- row.names(restemp)
restemp$temp <- gsub("[.].+", "", restemp$temp)
restemp$symbol <- mapIds(EnsDb.Hsapiens.v75,
keys=restemp$temp,
column="SYMBOL",
keytype="GENEID",
multiVals="first")
with(restemp, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between \nbreast cancers in Nigerian patients with and without 14q LOH", xlim=c(-60,60), ylim=c(0,60)))
with(subset(restemp, padj<0.05 & (2^(abs(log2FoldChange))>50)), points(log2FoldChange, -log10(padj), pch=20, col="blue"))
with(subset(restemp, padj<0.05 & (2^(abs(log2FoldChange))>50)), textxy(log2FoldChange, -log10(padj), labs=symbol, cex=.5))
diffLOHtable <- as.data.frame(diffLOH)
diffLOHtable$temp <- row.names(diffLOH)
diffLOHtable$temp <- gsub("[.].+", "", diffLOHtable$temp)
diffLOHtable$symbol <- mapIds(EnsDb.Hsapiens.v75,
keys=diffLOHtable$temp,
column="SYMBOL",
keytype="GENEID",
multiVals="first")
diffLOHtable$biotype <- mapIds(EnsDb.Hsapiens.v75,
keys=diffLOHtable$temp,
column="GENEBIOTYPE",
keytype="GENEID",
multiVals="first")
diffLOHtable$chr <- mapIds(EnsDb.Hsapiens.v75,
keys=diffLOHtable$temp,
column="SEQNAME",
keytype="GENEID",
multiVals="first")
diffLOHtable$locstart <- mapIds(EnsDb.Hsapiens.v75,
keys=diffLOHtable$temp,
column="GENESEQSTART",
keytype="GENEID",
multiVals="first")
diffLOHtable$locend <- mapIds(EnsDb.Hsapiens.v75,
keys=diffLOHtable$temp,
column="GENESEQEND",
keytype="GENEID",
multiVals="first")
diffLOHtable$temp <- NULL
diffLOHtable <- diffLOHtable %>% arrange(log2FoldChange)
top_n(diffLOHtable, 10, log2FoldChange)
top_n(diffLOHtable, -10, log2FoldChange)
write.csv(diffLOHtable, file = "DE-LOH.csv")
