fit <- eBayes(fit)
dt <- decideTests(fit)
summary(dt)
hist(fit$p.value, ylim=c(0,3000), main="Histogram of unadjusted p-values of differential gene expression\n between HR-positive breast cancers in Nigerian and TCGA black patients\n quantile corrected")
qvals<-p.adjust(fit$p.value[,1], method='fdr')
df_limma <- data_frame(log2FoldChange = fit$coefficients[,1],
pval = fit$p.value[,1],
padj = qvals,
anno = fit$genes)
with(df_limma, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between HR-positive \nbreast cancers in Nigerian and TCGA black breast cancer patients\nquantile corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), points(log2FoldChange, -log10(padj), pch=20, col="blue"))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), textxy(log2FoldChange, -log10(padj), labs=anno$symbol, cex=.5))
df_limmaprint <- as.data.frame(df_limma)
df_limmaprint <- df_limmaprint %>% arrange(log2FoldChange) %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(abs(log2FoldChange)>0.58)
top_n(df_limmaprint, 10, log2FoldChange)
top_n(df_limmaprint, -10, log2FoldChange)
designNvsWHER2 <- design
designNvsWHER2$sampleCondition <- ifelse (designNvsWHER2$sampleCondition=="TCGA_white.Her2", 0, as.character(designNvsWHER2$sampleCondition))
designNvsWHER2$sampleCondition <- ifelse (designNvsWHER2$sampleCondition=="Nigerian.Her2", 1, as.character(designNvsWHER2$sampleCondition))
designNvsWHER2$sampleCondition <- ifelse (designNvsWHER2$sampleCondition==0 | designNvsWHER2$sampleCondition==1, designNvsWHER2$sampleCondition, NA)
designNvsWHER2 <- designNvsWHER2 %>% subset(is.na(sampleCondition)==FALSE)
designNvsWHER2$TCGA_white.Her2 <- ifelse (designNvsWHER2$sampleCondition==0, 1, 0)
designNvsWHER2$Nigerian.Her2 <- ifelse (designNvsWHER2$sampleCondition==1, 1, 0)
designNvsWHER2$sampleCondition <- NULL
mm <- model.matrix(~0+designNvsWHER2$TCGA_white.Her2+designNvsWHER2$Nigerian.Her2)
quantids <- rownames(designNvsWHER2)
rownames(mm) <- quantids
colnames(mm) <- c("TCGA_white", "Nigerian")
quantdata <- as.data.frame(t(counts(ddsHTSeqMF)))
quantdata <- quantdata[quantids,]
quantdata <- t(quantdata)
d0 <- DGEList(counts=quantdata, genes=annotation)
cutoff <- 10
drop <- which(apply(cpm(d0), 1, max) < cutoff)
d <- d0[-drop,]
dim(d) # Number of genes after taking out low expressed genes
v=voom(d,designNvsWHER2,plot=T, normalize="quantile")
contr.matrix <- makeContrasts(TCGA_white.Her2-Nigerian.Her2, levels=colnames(designNvsWHER2))
fit <- lmFit(v, designNvsWHER2)
fit <- contrasts.fit(fit, contrasts=contr.matrix)
fit <- eBayes(fit)
dt <- decideTests(fit)
summary(dt)
hist(fit$p.value, ylim=c(0,3000), main="Histogram of unadjusted p-values of differential gene expression\n between Her2+ breast cancers in Nigerian and TCGA white patients\n quantile corrected")
qvals<-p.adjust(fit$p.value[,1], method='fdr')
df_limma <- data_frame(log2FoldChange = fit$coefficients[,1],
pval = fit$p.value[,1],
padj = qvals,
anno = fit$genes)
with(df_limma, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between Her2+ \nbreast cancers in Nigerian and TCGA white breast cancer patients\nquantile corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), points(log2FoldChange, -log10(padj), pch=20, col="blue"))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), textxy(log2FoldChange, -log10(padj), labs=anno$symbol, cex=.5))
df_limmaprint <- as.data.frame(df_limma)
df_limmaprint <- df_limmaprint %>% arrange(log2FoldChange) %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(abs(log2FoldChange)>0.58)
top_n(df_limmaprint, 10, log2FoldChange)
top_n(df_limmaprint, -10, log2FoldChange)
sampleTable2 <- data.frame(sampleName=gsub(".htseq.counts","",sampleFiles),
fileName=sampleFiles,
sampleCondition=sampleLOH)
sampleTable2 <- sampleTable2 %>% subset(is.na(sampleCondition)==FALSE)
ddsHTSeqMF2 <- DESeqDataSetFromHTSeqCount(
sampleTable=sampleTable2,
directory=FOLDER,
design=~sampleCondition)
ddsHTSeqMF2 <- ddsHTSeqMF2[rowSums(counts(ddsHTSeqMF2)) > 0, ] #Pre-filtering the dataset by removing the rows without any  information about gene expression
dds <- estimateSizeFactors(ddsHTSeqMF2) #The size factor is the median ratio of the sample over a "pseudosample": for each gene, the geometric mean of all samples. This accounts for sequencing depth.
vsd <- vst(ddsHTSeqMF2, blind=FALSE) #Variance-stabilizing transformation, only using this since >50 samples
plotPCA(vsd, intgroup=c("sampleCondition"))
ddsMF <- DESeq(ddsHTSeqMF2)
resultsNames(ddsMF)
fc = 0.58 #Subsequent threshold of signifcance for log2 fold change -> 0.58 = log2(1.5)
fdr = 0.05 #Subsequent threshold of significance for p-value (adjusted by FDR)
cat("MA Plot: Differential expression based on 14q LOH presence")
res <- lfcShrink(ddsMF, coef="sampleCondition_noLOH_vs_LOH", type="ashr", optmethod = "mixEM")
DESeq2::plotMA(res, ylim=c(-10,10), xlim=c(0.1,200))
diffLOH<- results(ddsMF, contrast=c("sampleCondition", "noLOH", "LOH"), alpha=0.05)
nrow(diffLOH)
diffLOH <- diffLOH[(diffLOH$log2FoldChange >= fc | diffLOH$log2FoldChange <= -fc),]
diffLOH <- subset(diffLOH, padj < fdr)
nrow(diffLOH)
restemp <- lfcShrink(ddsMF, contrast=c("sampleCondition", "noLOH", "LOH"), res = diffLOH, type="ashr", optmethod = "mixEM")
restemp$temp <- row.names(restemp)
restemp$temp <- gsub("[.].+", "", restemp$temp)
restemp$symbol <- mapIds(EnsDb.Hsapiens.v75,
keys=restemp$temp,
column="SYMBOL",
keytype="GENEID",
multiVals="first")
with(restemp, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between \nbreast cancers in Nigerian patients with and without 14q LOH", xlim=c(-60,60), ylim=c(0,60)))
with(subset(restemp, padj<0.05 & (2^(abs(log2FoldChange))>50)), points(log2FoldChange, -log10(padj), pch=20, col="blue"))
with(subset(restemp, padj<0.05 & (2^(abs(log2FoldChange))>50)), textxy(log2FoldChange, -log10(padj), labs=symbol, cex=.5))
diffLOHtable <- as.data.frame(diffLOH)
diffLOHtable$temp <- row.names(diffLOH)
diffLOHtable$temp <- gsub("[.].+", "", diffLOHtable$temp)
diffLOHtable$symbol <- mapIds(EnsDb.Hsapiens.v75,
keys=diffLOHtable$temp,
column="SYMBOL",
keytype="GENEID",
multiVals="first")
diffLOHtable$biotype <- mapIds(EnsDb.Hsapiens.v75,
keys=diffLOHtable$temp,
column="GENEBIOTYPE",
keytype="GENEID",
multiVals="first")
diffLOHtable$chr <- mapIds(EnsDb.Hsapiens.v75,
keys=diffLOHtable$temp,
column="SEQNAME",
keytype="GENEID",
multiVals="first")
diffLOHtable$locstart <- mapIds(EnsDb.Hsapiens.v75,
keys=diffLOHtable$temp,
column="GENESEQSTART",
keytype="GENEID",
multiVals="first")
diffLOHtable$locend <- mapIds(EnsDb.Hsapiens.v75,
keys=diffLOHtable$temp,
column="GENESEQEND",
keytype="GENEID",
multiVals="first")
diffLOHtable$temp <- NULL
diffLOHtable <- diffLOHtable %>% arrange(log2FoldChange)
top_n(diffLOHtable, 10, log2FoldChange)
top_n(diffLOHtable, -10, log2FoldChange)
diffLOH<- results(ddsMF, contrast=c("sampleCondition", "noLOH", "LOH"), pAdjustMethod ="fdr", alpha=fdr)
nrow(diffLOH)
diffLOH <- diffLOH[(diffLOH$log2FoldChange >= fc | diffLOH$log2FoldChange <= -fc),]
diffLOH <- subset(diffLOH, padj < fdr)
nrow(diffLOH)
diffLOH<- results(ddsMF, contrast=c("sampleCondition", "noLOH", "LOH"), alpha=fdr)
nrow(diffLOH)
diffLOH <- diffLOH[(diffLOH$log2FoldChange >= fc | diffLOH$log2FoldChange <= -fc),]
diffLOH <- subset(diffLOH, padj < fdr)
nrow(diffLOH)
diffLOHpath <- results(ddsMF, contrast=c("sampleCondition", "noLOH", "LOH"), pAdjustMethod ="fdr", alpha=fdr)
diffLOHpath <- as.data.frame(diffLOHpath)
diffLOHpath$foldChange <- NA
row.pos <- which(! is.na(diffLOHpath$log2FoldChange) &
diffLOHpath$log2FoldChange >= 0)
row.neg <- which(! is.na(diffLOHpath$log2FoldChange) &
diffLOHpath$log2FoldChange < 0)
diffLOHpath$foldChange[row.pos] <- 2^diffLOHpath$log2FoldChange[row.pos]
diffLOHpath$foldChange[row.neg] <- -2^((-1) * diffLOHpath$log2FoldChange[row.neg])
diffLOHpath <- data.frame(id = row.names(diffLOHpath), diffLOHpath)
View(diffLOHpath)
diffLOHpath.ensembl <- gsub('\\S+[!]', '', diffLOHpath[,1], perl = TRUE)
diffLOHpath.symbol <- gsub('[!]\\S+', '', diffLOHpath[,1], perl = TRUE)
rm(diffLOHpath)
rm(diffLOHpath.ensembl)
rm(diffLOHpath.symbol)
diffLOHpath$ENSEMBL <- row.names(diffLOHpath)
diffLOHpath <- results(ddsMF, contrast=c("sampleCondition", "noLOH", "LOH"), pAdjustMethod ="fdr", alpha=fdr)
diffLOHpath <- as.data.frame(diffLOHpath)
View(diffLOHpath)
diffLOHpath$ENSEMBL <- row.names(diffLOHpath)
diffLOHpath$temp <- row.names(diffLOHpath)
diffLOHtable$temp <- gsub("[.].+", "", diffLOHtable$temp)
diffLOHpath$temp <- gsub("[.].+", "", diffLOHpath$temp)
diffLOHtable$symbol <- mapIds(EnsDb.Hsapiens.v75,
keys=diffLOHtable$temp,
column="SYMBOL",
keytype="GENEID",
multiVals="first")
diffLOHpath$symbol <- mapIds(EnsDb.Hsapiens.v75,
keys=diffLOHpath$temp,
column="SYMBOL",
keytype="GENEID",
multiVals="first")
diffLOHpath$symbol <- NULL
diffLOHpath$SYMBOL <- mapIds(EnsDb.Hsapiens.v75,
keys=diffLOHpath$temp,
column="SYMBOL",
keytype="GENEID",
multiVals="first")
View(diffLOHpath)
diffLOHpath.print <- data.frame(diffLOHpath[,-c(1:2)])
View(diffLOHpath.print)
diffLOHpath <- results(ddsMF, contrast=c("sampleCondition", "noLOH", "LOH"), pAdjustMethod ="fdr", alpha=fdr)
diffLOHpath <- as.data.frame(diffLOHpath)
diffLOHpath$ENSEMBL <- row.names(diffLOHpath)
diffLOHpath$temp <- row.names(diffLOHpath)
diffLOHpath$temp <- gsub("[.].+", "", diffLOHpath$temp)
diffLOHpath$SYMBOL <- mapIds(EnsDb.Hsapiens.v75,
keys=diffLOHpath$temp,
column="SYMBOL",
keytype="GENEID",
multiVals="first")
View(diffLOHpath)
diffLOHpath <- results(ddsMF, contrast=c("sampleCondition", "noLOH", "LOH"), pAdjustMethod ="fdr", alpha=fdr)
diffLOHpath <- as.data.frame(diffLOHpath)
diffLOHpath$ENSEMBL <- row.names(diffLOHpath)
diffLOHpath$temp <- row.names(diffLOHpath)
diffLOHpath$temp <- gsub("[.].+", "", diffLOHpath$temp)
diffLOHpath$SYMBOL <- mapIds(EnsDb.Hsapiens.v75,
keys=diffLOHpath$temp,
column="SYMBOL",
keytype="GENEID",
multiVals="first")
diffLOHpath$baseMean <- NULL
diffLOHpath$temp <- NULL
View(diffLOHpath)
rm(diffLOHpath.print)
diffLOHpath <- results(ddsMF, contrast=c("sampleCondition", "noLOH", "LOH"), pAdjustMethod ="fdr", alpha=fdr)
diffLOHpath <- as.data.frame(diffLOHpath)
diffLOHpath$foldChange <- NA
row.pos <- which(! is.na(diffLOHpath$log2FoldChange) &
diffLOHpath$log2FoldChange >= 0)
row.neg <- which(! is.na(diffLOHpath$log2FoldChange) &
diffLOHpath$log2FoldChange < 0)
diffLOHpath$foldChange[row.pos] <- 2^diffLOHpath$log2FoldChange[row.pos]
diffLOHpath$foldChange[row.neg] <- -2^((-1) * diffLOHpath$log2FoldChange[row.neg])
diffLOHpath <- data.frame(id = row.names(diffLOHpath), diffLOHpath)
diffLOHpath$ENSEMBL <- row.names(diffLOHpath)
diffLOHpath$temp <- row.names(diffLOHpath)
diffLOHpath$temp <- gsub("[.].+", "", diffLOHpath$temp)
diffLOHpath$SYMBOL <- mapIds(EnsDb.Hsapiens.v75,
keys=diffLOHpath$temp,
column="SYMBOL",
keytype="GENEID",
multiVals="first")
View(diffLOHpath)
diffLOHpath <- results(ddsMF, contrast=c("sampleCondition", "noLOH", "LOH"), pAdjustMethod ="fdr", alpha=fdr)
diffLOHpath <- as.data.frame(diffLOHpath)
diffLOHpath$foldChange <- NA
row.pos <- which(! is.na(diffLOHpath$log2FoldChange) &
diffLOHpath$log2FoldChange >= 0)
row.neg <- which(! is.na(diffLOHpath$log2FoldChange) &
diffLOHpath$log2FoldChange < 0)
diffLOHpath$foldChange[row.pos] <- 2^diffLOHpath$log2FoldChange[row.pos]
diffLOHpath$foldChange[row.neg] <- -2^((-1) * diffLOHpath$log2FoldChange[row.neg])
diffLOHpath$ENSEMBL <- row.names(diffLOHpath)
diffLOHpath$temp <- row.names(diffLOHpath)
diffLOHpath$temp <- gsub("[.].+", "", diffLOHpath$temp)
diffLOHpath$SYMBOL <- mapIds(EnsDb.Hsapiens.v75,
keys=diffLOHpath$temp,
column="SYMBOL",
keytype="GENEID",
multiVals="first")
diffLOHpath$baseMean <- NULL
diffLOHpath$temp <- NULL
View(diffLOHpath)
diffLOHpath.flt <- diffLOHpath[(diffLOHpath$foldChange >= fc | diffLOHpath$foldChange <= -fc) & diffLOHpath$padj < fdr,]
View(diffLOHpath.flt)
diffLOHpath.flt <- diffLOHpath[(diffLOHpath$foldChange >= 1.5 | diffLOHpath$foldChange <= -1.5) & diffLOHpath$padj < 0.05,]
genes.all <- diffLOHpath
genes.sig <- diffLOHpath.flt
View(diffLOHpath)
genes.all$ENSEMBL <- gsub('[.]\\d+', '', genes.all$ENSEMBL, perl = TRUE)
View(genes.all)
genes.sig$ENSEMBL <- gsub('[.]\\d+', '', genes.sig$ENSEMBL, perl = TRUE)
View(genes.sig)
genes.all <- na.omit(genes.all)
View(genes.all)
View(genes.sig)
genes.sig <- na.omit(genes.sig)
View(genes.sig)
genes.all.anno <- bitr(geneID   =  genes.all$ENSEMBL,
fromType = 'ENSEMBL',
toType   = c('ENTREZID', 'SYMBOL'),
OrgDb    = 'EnsDb.Hsapiens.v75',
drop     = TRUE)
genes.all.anno <- bitr(geneID   =  genes.all$SYMBOL,
fromType = 'SYMBOL',
toType   = c('ENTREZID', 'SYMBOL'),
OrgDb    = 'EnsDb.Hsapiens.v75',
drop     = TRUE)
View(genes.all.anno)
genes.all.anno <- genes.all.anno[
which(! duplicated(genes.all.anno$ENTREZID)), ]
row.names(genes.all.anno) <- genes.all.anno$ENTREZID
View(genes.all.anno)
genes.all.anno <- merge(genes.all.anno, genes.all, by = 'SYMBOL')
row.names(genes.all.anno) <- genes.all.anno$ENTREZID
genes.all.anno <- bitr(geneID   =  genes.all$ENSEMBL,
fromType = 'GENEID',
toType   = c('ENTREZID', 'SYMBOL'),
OrgDb    = 'EnsDb.Hsapiens.v75',
drop     = TRUE)
genes.all.anno <- genes.all.anno[
which(! duplicated(genes.all.anno$ENTREZID)), ]
row.names(genes.all.anno) <- genes.all.anno$ENTREZID
genes.all.anno <- merge(genes.all.anno, genes.all, by = 'GENEID')
row.names(genes.all.anno) <- genes.all.anno$ENTREZID
genes.all.anno <- merge(genes.all.anno, genes.all, by = 'ENSEMBL')
row.names(genes.all.anno) <- genes.all.anno$ENTREZID
genes.all.anno <- bitr(geneID   =  genes.all$ENSEMBL,
fromType = 'GENEID',
toType   = c('GENEID', 'ENTREZID', 'SYMBOL'),
OrgDb    = 'EnsDb.Hsapiens.v75',
drop     = TRUE)
genes.all.anno <- genes.all.anno[
which(! duplicated(genes.all.anno$ENTREZID)), ]
row.names(genes.all.anno) <- genes.all.anno$ENTREZID
genes.all.anno <- merge(genes.all.anno, genes.all, by = 'GENEID')
row.names(genes.all.anno) <- genes.all.anno$ENTREZID
View(genes.all.anno)
genes.all.anno <- bitr(geneID   =  genes.all$ENSEMBL,
fromType = 'GENEID',
toType   = c('ENTREZID', 'SYMBOL'),
OrgDb    = 'EnsDb.Hsapiens.v75',
drop     = TRUE)
genes.all.anno <- genes.all.anno[
which(! duplicated(genes.all.anno$ENTREZID)), ]
row.names(genes.all.anno) <- genes.all.anno$ENTREZID
genes.all.anno <- merge(genes.all.anno, genes.all, by = 'SYMBOL')
row.names(genes.all.anno) <- genes.all.anno$ENTREZID
genes.all <- diffLOHpath
genes.sig <- diffLOHpath.flt
genes.all$ENSEMBL <- gsub('[.]\\d+', '', genes.all$ENSEMBL, perl = TRUE)
genes.sig$ENSEMBL <- gsub('[.]\\d+', '', genes.sig$ENSEMBL, perl = TRUE)
View(genes.all.anno)
View(genes.all.anno)
rm(genes.all.anno)
genes.all.anno <- bitr(geneID   =  genes.all$ENSEMBL,
fromType = 'GENEID',
toType   = c('ENTREZID', 'SYMBOL'),
OrgDb    = 'EnsDb.Hsapiens.v75',
drop     = TRUE)
View(genes.all.anno)
genes.all.anno <- genes.all.anno[
which(! duplicated(genes.all.anno$ENTREZID)), ]
row.names(genes.all.anno) <- genes.all.anno$ENTREZID
genes.all.anno$ENSEMBL <- genes.all.anno$GENEID
genes.all.anno$GENEID <- NULL
genes.all.anno <- merge(genes.all.anno, genes.all, by = 'ENSEMBL')
row.names(genes.all.anno) <- genes.all.anno$ENTREZID
View(genes.all.anno)
genes.sig.anno <- genes.all.anno[genes.all.anno$ENSEMBL %in%
genes.sig$ENSEMBL,]
print(paste0('Genes significant = ', nrow(genes.sig.anno)))
genes.sig.anno[1:3,1:7]
gene.list <- genes.all.anno$foldChange
names(gene.list) <- genes.all.anno$ENTREZID
gene.list <- sort(gene.list, decreasing = TRUE)
gene.list[1:3]
View(gene.list)
ego <- enrichGO( gene          = genes.sig.anno$ENTREZID,
universe      = genes.all.anno$ENTREZID,
OrgDb         = 'EnsDb.Hsapiens.v75',
ont           = "BP",
pAdjustMethod = "fdr",
pvalueCutoff  = 0.05,
readable      = TRUE)
ego <- enrichGO( gene          = genes.sig.anno$ENTREZID,
universe      = genes.all.anno$ENTREZID,
OrgDb         = 'org.Hs.eg.db',
ont           = "BP",
pAdjustMethod = "fdr",
pvalueCutoff  = 0.05,
readable      = TRUE)
ego <- enrichGO(gene          = genes.sig.anno$ENTREZID,
universe      = genes.all.anno$ENTREZID,
OrgDb         = 'org.Hs.eg.db',
ont           = "BP",
pAdjustMethod = "fdr",
pvalueCutoff  = 0.05,
readable      = TRUE)
ego <- enrichGO(gene          = genes.sig.anno$ENTREZID,
universe      = as.character(genes.all.anno$ENTREZID),
OrgDb         = 'org.Hs.eg.db',
ont           = "BP",
pAdjustMethod = "fdr",
pvalueCutoff  = 0.05,
readable      = TRUE)
head(summary(ego))
ego2 <- enrichGO(gene          = genes.sig.anno$SYMBOL.x,
universe      = as.character(genes.all.anno$SYMBOL.x),
OrgDb         = 'org.Hs.eg.db',
ont           = "CC",
pAdjustMethod = "fdr",
pvalueCutoff  = 0.05,
readable      = TRUE)
save(ego, file = paste0(out.prefix, '.flt.fdr', 0.05,'_fc',1.5, '.enrichGO.RData'))
save(ego, file = paste0(out.prefix, '.flt.fdr', "0.05",'_fc',"1.5", '.enrichGO.RData'))
save(ego, file="GO-LOH.significantgenes.fdr0.05.fc1.5.enrichGO.RData")
load("~/Research-Local/RNAseq-Local/TCGA-Nigerian-RNAseq/GO-LOH.significantgenes.fdr0.05.fc1.5.enrichGO.RData")
View(ego)
write.csv(ego, file="GO-LOH.significantgenes.fdr0.05.fc1.5.enrichGO.csv")
print(ego)
as.data.frame(ego)
options(jupyter.plot_mimetypes = "image/svg+xml")
options(repr.plot.width = 10, repr.plot.height = 5)
egokegg <- ego
for(i in 1:5) {
egokegg <- dropGO(egokegg, level = i)
}
p1 <- barplot(egokegg, showCategory=20)
p2 <- dotplot(egokegg, showCategory=20)
p1 <- barplot(egokegg)
p2 <- dotplot(egokegg)
plot(p1)
plot(p2)
kk <- enrichKEGG(gene          = genes.sig.anno$ENTREZID,
universe      = genes.all.anno$ENTREZID,
organism      = "human",
pAdjustMethod = "fdr",
pvalueCutoff  = 0.05)
summary(kk)[1:3,]
kk <- enrichKEGG(gene          = genes.sig.anno$ENTREZID,
universe      = as.character(genes.all.anno$ENTREZID),
organism      = "human",
pAdjustMethod = "fdr",
pvalueCutoff  = 0.05)
summary(kk)[1:3,]
kk <- enrichKEGG(gene          = as.character(genes.sig.anno$ENTREZID),
universe      = as.character(genes.all.anno$ENTREZID),
organism      = "human",
pAdjustMethod = "fdr",
pvalueCutoff  = 0.05)
summary(kk)[1:3,]
kk <- enrichKEGG(gene          = as.character(genes.sig.anno$ENTREZID),
universe      = as.character(genes.all.anno$ENTREZID),
organism      = "hsa",
pAdjustMethod = "fdr",
pvalueCutoff  = 0.05)
summary(kk)[1:3,]
kk <- enrichKEGG(gene          = genes.sig.anno$ENTREZID,
universe      = as.character(genes.all.anno$ENTREZID),
organism      = "hsa",
pAdjustMethod = "fdr",
pvalueCutoff  = 0.05)
summary(kk)[1:3,]
kk <- enrichKEGG(gene          = genes.sig.anno$ENTREZID,
universe      = as.character(genes.all.anno$ENTREZID),
keyType       = "ncbi-geneid",
organism      = "hsa",
pAdjustMethod = "fdr",
pvalueCutoff  = 0.05)
summary(kk)[1:3,]
View(genes.sig.anno)
kk <- enrichKEGG(gene          = genes.sig.anno$ENTREZID,
universe      = as.character(genes.all.anno$ENTREZID),
keyType       = ncbi-geneid,
organism      = "hsa",
pAdjustMethod = "fdr",
pvalueCutoff  = 0.05)
summary(kk)[1:3,]
kk <- enrichKEGG(gene          = genes.sig.anno$ENTREZID,
universe      = as.character(genes.all.anno$ENTREZID),
keyType       = ncbi-geneid,
organism      = "hsa",
pAdjustMethod = "fdr",
pvalueCutoff  = 0.05)
summary(kk)[1:3,]
kk <- enrichKEGG(gene          = genes.sig.anno$ENTREZID,
universe      = as.character(genes.all.anno$ENTREZID),
keyType       = ncbi-geneid,
organism      = "hsa",
pAdjustMethod = "fdr",
pvalueCutoff  = 0.05)
summary(kk)[1:3,]
kk <- enrichKEGG(gene          = genes.sig.anno$ENTREZID,
universe      = as.character(genes.all.anno$ENTREZID),
keyType       = 'ncbi-geneid',
organism      = "hsa",
pAdjustMethod = "fdr",
pvalueCutoff  = 0.05)
summary(kk)[1:3,]
kk <- enrichKEGG(gene          = genes.sig.anno$ENTREZID,
universe      = as.character(genes.all.anno$ENTREZID),
keyType = "kegg",
organism      = "hsa",
pAdjustMethod = "fdr",
pvalueCutoff  = 0.05)
summary(kk)[1:3,]
View(kk)
kk <- enrichKEGG(gene          = genes.sig.anno$ENTREZID,
universe      = as.character(genes.all.anno$ENTREZID),
organism      = "hsa",
pAdjustMethod = "fdr",
pvalueCutoff  = 0.05,
readable      = TRUE)
kk <- enrichKEGG(gene          = genes.sig.anno$ENTREZID,
universe      = as.character(genes.all.anno$ENTREZID),
organism      = "hsa",
pAdjustMethod = "fdr",
pvalueCutoff  = 0.05)
View(kk)
summary(kk)
summary(as.data.frame(kk))
as.data.frame(kk)[1:3]
as.data.frame(kk)[1:3,]
kk <- enrichKEGG(gene          = genes.sig.anno$ENTREZID,
universe      = as.character(genes.all.anno$ENTREZID),
organism      = "hsa",
pAdjustMethod = "fdr",
pvalueCutoff  = 0.05)
summary(kk$result)[1:3,]
summary(kk$result[1:3,])
save(kk, file="GO-LOH.significantgenes.fdr0.05.fc1.5.enrichKEGG.RData")
write.csv(kk, file="GO-LOH.significantgenes.fdr0.05.fc1.5.enrichKEGG.csv")
View(kk)
kk <- enrichKEGG(gene          = genes.sig.anno$ENTREZID,
universe      = as.character(genes.all.anno$ENTREZID),
organism      = "hsa",
pAdjustMethod = "fdr",
pvalueCutoff  = 0.05)
View(kk)
kk[,1]
kk[1,
]
save(kk@result, file="GO-LOH.significantgenes.fdr0.05.fc1.5.enrichKEGG.RData")
write.csv(kk@result, file="GO-LOH.significantgenes.fdr0.05.fc1.5.enrichKEGG.csv")
kk@result
save(kk@result, file="GO-LOH.significantgenes.fdr0.05.fc1.5.enrichKEGG.RData")
save(kk, file="GO-LOH.significantgenes.fdr0.05.fc1.5.enrichKEGG.RData")
load("/Users/parajago/Research-Local/RNAseq-Local/TCGA-Nigerian-RNAseq/GO-LOH.significantgenes.fdr0.05.fc1.5.enrichKEGG.RData")
pathway <- 'hsa04340'
plot.title <- paste0(pathway, '.gene_all.pathview.png')
p4 <- pathview(gene.data  = gene.list,
pathway.id = pathway,
species    = "human",
limit      = list(gene=4, cpd=1))
