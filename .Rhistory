dat  <- counts(dds, normalized = TRUE)
idx  <- rowMeans(dat) > 1
dat  <- dat[idx, ]
mod  <- model.matrix(~condition1, colData(dds))
mod0 <- model.matrix(~   1, colData(dds))
svseq <- svaseq(dat, mod, mod0, n.sv = 1)
sampleTablebe <- data.frame(sampleName=gsub(".htseq.counts","",sampleFiles),
fileName=sampleFiles,
condition1=sampleConditionrace,
condition2=sampleConditionPAM50,
be1=svseq$sv[,1],
batch=batchval)
sampleTablebe$sampleCondition <- paste(sampleTablebe$condition1, sampleTablebe$condition2, sep=".")
ddsHTSeqMFbe <- DESeqDataSetFromHTSeqCount(sampleTable=sampleTablebe,
directory=FOLDER,
design= ~be1+sampleCondition)
ddsHTSeqMFbe <- ddsHTSeqMFbe[rowSums(counts(ddsHTSeqMFbe)) > 0, ]
ddsHTSeqMFbe$sampleCondition <- relevel(ddsHTSeqMFbe$sampleCondition, ref = "Nigerian.Basal") #explicitly making the Nigerian Basal patients the reference population
ddsMF <- DESeq(ddsHTSeqMF) #This will refer to a version that does not include batch correction outside of what is accomplished through DESeq2 alone.
ddsMF <- DESeq(ddsHTSeqMF) #This will refer to a version that does not include batch correction outside of what is accomplished through DESeq2 alone.
ddsMFbe <-DESeq(ddsHTSeqMFbe)
#4 rows did not converge in beta, labelled in mcols(object)$betaConv
resultsNames(ddsMF)
resultsNames(ddsMFbe)
cat("MA Plot 1: Original differential expression")
res <- lfcShrink(ddsMF, coef="sampleCondition_TCGA_white.Basal_vs_Nigerian.Basal", type="ashr", optmethod = "mixEM")
DESeq2::plotMA(res, ylim=c(-10,10), xlim=c(0.1,200))
cat("MA Plot 2: Batch-corrected differential expression")
res2 <- lfcShrink(ddsMFbe, coef="sampleCondition_TCGA_white.Basal_vs_Nigerian.Basal", type="ashr" , optmethod = "mixEM")
DESeq2::plotMA(res2, ylim=c(-10,10), xlim=c(0.1,200))
fc = 1.5
fdr = 0.01
#Without batch correction
diffTCGA<- results(ddsMF, contrast=c("sampleCondition", "TCGA_black.Basal", "TCGA_white.Basal"), alpha=0.05)
diffTCGA$foldChange <- NA
row.pos <- which(! is.na(diffTCGA$log2FoldChange) &
diffTCGA$log2FoldChange >= 0)
row.neg <- which(! is.na(diffTCGA$log2FoldChange) &
diffTCGA$log2FoldChange < 0)
diffTCGA$foldChange[row.pos] <- 2^diffTCGA$log2FoldChange[row.pos]
diffTCGA$foldChange[row.neg] <- -2^((-1) * diffTCGA$log2FoldChange[row.neg])
diffTCGA <- data.frame(id = row.names(diffTCGA), diffTCGA)
before <- nrow(diffTCGA)
diffTCGA <- diffTCGA[!is.na(diffTCGA$foldChange) & ! is.na(diffTCGA$padj),];
after <- nrow(diffTCGA)
print(paste0('Genes removed = ', (before - after),
' (fold change is NA)'))
diffTCGA <- diffTCGA[(diffTCGA$foldChange >= fc | diffTCGA$foldChange <= -fc) &
diffTCGA$padj < fdr,]
restemp <- lfcShrink(ddsMF, contrast=c("sampleCondition", "TCGA_black.Basal", "TCGA_white.Basal"), res = diffTCGA, type="ashr", optmethod = "mixEM")
restemp$temp <- row.names(restemp)
restemp$temp <- gsub("[.].+", "", restemp$temp)
restemp$symbol <- mapIds(EnsDb.Hsapiens.v75,
keys=restemp$temp,
column="SYMBOL",
keytype="GENEID",
multiVals="first")
hist(restemp$pvalue, main="Histogram of unadjusted p-values of differential\n gene expression between basal breast cancers \nin TCGA black and \nTCGA white breast cancer patients")
with(restemp, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between basal \nbreast cancers in TCGA black and \nTCGA white breast cancer patients", xlim=c(-50,50), ylim=c(0,70)))
with(subset(restemp, padj<0.05 & abs(log2FoldChange)>25), points(log2FoldChange, -log10(pvalue), pch=20, col="blue"))
with(subset(restemp, padj<0.05 & abs(log2FoldChange)>25), textxy(log2FoldChange, -log10(padj), labs=symbol, cex=.5))
diffTCGA$foldChange <- NA
row.pos <- which(! is.na(diffTCGA$log2FoldChange) &
diffTCGA$log2FoldChange >= 0)
row.neg <- which(! is.na(diffTCGA$log2FoldChange) &
diffTCGA$log2FoldChange < 0)
diffTCGA$foldChange[row.pos] <- 2^diffTCGA$log2FoldChange[row.pos]
diffTCGA$foldChange[row.neg] <- -2^((-1) * diffTCGA$log2FoldChange[row.neg])
diffTCGA <- data.frame(id = row.names(diffTCGA), diffTCGA)
before <- nrow(diffTCGA)
diffTCGA <- diffTCGA[!is.na(diffTCGA$foldChange) & ! is.na(diffTCGA$padj),];
after <- nrow(diffTCGA)
print(paste0('Genes removed = ', (before - after),
' (fold change is NA)'))
diffTCGA <- diffTCGA[(diffTCGA$foldChange >= fc | diffTCGA$foldChange <= -fc) &
diffTCGA$padj < fdr,]
restemp <- lfcShrink(ddsMF, contrast=c("sampleCondition", "TCGA_black.Basal", "TCGA_white.Basal"), res = diffTCGA, type="ashr", optmethod = "mixEM")
diffTCGA$foldChange <- NULL
restemp <- lfcShrink(ddsMF, contrast=c("sampleCondition", "TCGA_black.Basal", "TCGA_white.Basal"), res = diffTCGA, type="ashr", optmethod = "mixEM")
diffTCGA<- results(ddsMF, contrast=c("sampleCondition", "TCGA_black.Basal", "TCGA_white.Basal"), alpha=0.05)
restemp <- lfcShrink(ddsMF, contrast=c("sampleCondition", "TCGA_black.Basal", "TCGA_white.Basal"), res = diffTCGA, type="ashr", optmethod = "mixEM")
diffTCGA <- diffTCGA[(diffTCGA$foldChange >= fc | diffTCGA$foldChange <= -fc) &
diffTCGA$padj < fdr,]
restemp <- lfcShrink(ddsMF, contrast=c("sampleCondition", "TCGA_black.Basal", "TCGA_white.Basal"), res = diffTCGA, type="ashr", optmethod = "mixEM")
log2(1.5)
fc = 0.58
fdr = 0.01
diffTCGA<- results(ddsMF, contrast=c("sampleCondition", "TCGA_black.Basal", "TCGA_white.Basal"), alpha=0.05)
diffTCGA <- diffTCGA[(diffTCGA$log2FoldChange >= fc | diffTCGA$log2FoldChange <= -fc) &
diffTCGA$padj < fdr,]
View(diffTCGA)
diffTCGA <- diffTCGA[(diffTCGA$log2FoldChange >= fc | diffTCGA$log2FoldChange <= -fc),]
diffTCGA <- diffTCGA[(diffTCGA$padj < fdr), ]
diffTCGA <- diffTCGA[(diffTCGA$padj <= fdr), ]
diffTCGA <- subset(diffTCGA, padj < 0.05)
restemp <- lfcShrink(ddsMF, contrast=c("sampleCondition", "TCGA_black.Basal", "TCGA_white.Basal"), res = diffTCGA, type="ashr", optmethod = "mixEM")
restemp$temp <- row.names(restemp)
restemp$temp <- gsub("[.].+", "", restemp$temp)
restemp$symbol <- mapIds(EnsDb.Hsapiens.v75,
keys=restemp$temp,
column="SYMBOL",
keytype="GENEID",
multiVals="first")
hist(restemp$pvalue, main="Histogram of unadjusted p-values of differential\n gene expression between basal breast cancers \nin TCGA black and \nTCGA white breast cancer patients")
with(restemp, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between basal \nbreast cancers in TCGA black and \nTCGA white breast cancer patients", xlim=c(-50,50), ylim=c(0,70)))
with(subset(restemp, padj<0.05 & abs(log2FoldChange)>25), points(log2FoldChange, -log10(pvalue), pch=20, col="blue"))
with(subset(restemp, padj<0.05 & abs(log2FoldChange)>25), textxy(log2FoldChange, -log10(padj), labs=symbol, cex=.5))
diffTCGA2 <- diffTCGA2[(diffTCGA2$log2FoldChange >= fc | diffTCGA2$log2FoldChange <= -fc),]
diffTCGA2 <- subset(diffTCGA2, padj < 0.05)
diffTCGA2<- results(ddsMFbe, contrast=c("sampleCondition", "TCGA_black.Basal", "TCGA_white.Basal"), alpha=0.05)
diffTCGA2 <- diffTCGA2[(diffTCGA2$log2FoldChange >= fc | diffTCGA2$log2FoldChange <= -fc),]
diffTCGA2 <- subset(diffTCGA2, padj < 0.05)
restemp2 <- lfcShrink(ddsMFbe, contrast=c("sampleCondition", "TCGA_black.Basal", "TCGA_white.Basal"), res = diffTCGA2, type="ashr", optmethod = "mixEM")
restemp2$temp <- row.names(restemp2)
restemp2$temp <- gsub("[.].+", "", restemp2$temp)
restemp2$symbol <- mapIds(EnsDb.Hsapiens.v75,
keys=restemp2$temp,
column="SYMBOL",
keytype="GENEID",
multiVals="first")
hist(restemp2$pvalue, main="Histogram of unadjusted p-values of differential\n gene expression between basal breast cancers \nin TCGA black and white \n breast cancer patients\nBatch corrected")
with(restemp2, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between basal \nbreast cancers in TCGA black and \nTCGA white breast cancer patients", xlim=c(-50,50), ylim=c(0,70)))
with(subset(restemp, padj<0.05 & abs(log2FoldChange)>25), points(log2FoldChange, -log10(pvalue), pch=20, col="blue"))
with(subset(restemp, padj<0.05 & abs(log2FoldChange)>25), textxy(log2FoldChange, -log10(padj), labs=symbol, cex=.5))
resBasal<- results(ddsMF, contrast=c("sampleCondition", "Nigerian.Basal", "TCGA_white.Basal"), alpha=0.05)
fdr <- 0.05
resBasal <- resBasal[(resBasal$log2FoldChange >= fc | resBasal$log2FoldChange <= -fc),]
resBasal <- subset(resBasal, padj < fdr)
restemp <- NULL
restemp <- lfcShrink(ddsMF, contrast=c("sampleCondition", "Nigerian.Basal", "TCGA_white.Basal"), res = resBasal, type="ashr", optmethod = "mixEM")
restemp$temp <- row.names(restemp)
restemp$temp <- gsub("[.].+", "", restemp$temp)
restemp$symbol <- mapIds(EnsDb.Hsapiens.v75,
keys=restemp$temp,
column="SYMBOL",
keytype="GENEID",
multiVals="first")
hist(restemp$pvalue, main="Histogram of unadjusted p-values of differential\n gene expression between basal breast cancers \nin Nigerian and \nTCGA white breast cancer patients")
with(restemp, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between basal \nbreast cancers in Nigerian and \nTCGA white breast cancer patients", xlim=c(-50,50), ylim=c(0,70)))
with(subset(restemp, padj<0.05 & abs(log2FoldChange)>25), points(log2FoldChange, -log10(pvalue), pch=20, col="blue"))
with(subset(restemp, padj<0.05 & abs(log2FoldChange)>25), textxy(log2FoldChange, -log10(padj), labs=symbol, cex=.5))
hist(restemp$pvalue, main="Histogram of unadjusted p-values of differential\n gene expression between basal breast cancers \nin Nigerian and \nTCGA white breast cancer patients")
resBasal2<- results(ddsMFbe, contrast=c("sampleCondition", "Nigerian.Basal", "TCGA_white.Basal"), alpha=0.05)
resBasal2 <- resBasal[(resBasal2$log2FoldChange >= fc | resBasal2$log2FoldChange <= -fc),]
resBasal2 <- subset(resBasal2, padj < fdr)
resBasal2 <- resBasal2[(resBasal2$log2FoldChange >= fc | resBasal2$log2FoldChange <= -fc),]
resBasal2 <- subset(resBasal2, padj < fdr)
restemp2 <- NULL
restemp2 <- lfcShrink(ddsMFbe, contrast=c("sampleCondition", "Nigerian.Basal", "TCGA_white.Basal"), res = resBasal2, type="ashr", optmethod = "mixEM")
restemp2$temp <- row.names(restemp2)
restemp2$temp <- gsub("[.].+", "", restemp2$temp)
restemp2$symbol <- mapIds(EnsDb.Hsapiens.v75,
keys=restemp2$temp,
column="SYMBOL",
keytype="GENEID",
multiVals="first")
hist(restemp2$pvalue, main="Histogram of unadjusted p-values of differential\n gene expression between basal breast cancers \nin Nigerian and \nTCGA white breast cancer patients\n batch corrected")
with(restemp2, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between basal \nbreast cancers in Nigerian and \nTCGA white breast cancer patients\n batch corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(restemp2, padj<0.05 & abs(log2FoldChange)>25), points(log2FoldChange, -log10(pvalue), pch=20, col="blue"))
with(subset(restemp2, padj<0.05 & abs(log2FoldChange)>25), textxy(log2FoldChange, -log10(padj), labs=symbol, cex=.5))
genename <- "ENSG00000150991.10"
plotCounts(ddsMF, gene = genename, intgroup=c("condition1"), main="Distribution of UBC expression across groups (before DE analysis)")
genename <- "ENSG00000134644.11"
plotCounts(ddsMF, gene = genename, intgroup=c("condition1"), main="Distribution of PUM1 expression across groups (before DE analysis)")
ubctempassay <- subset(resBasal, rownames(resBasal)=="ENSG00000150991.10")
ubctempassay[,1:6]
pum1tempassay <- subset(resBasal, rownames(resBasal)=="ENSG00000134644.11")
pum1tempassay[,1:6]
resBasal<- results(ddsMF, contrast=c("sampleCondition", "Nigerian.Basal", "TCGA_white.Basal"), alpha=0.05)
genename <- "ENSG00000150991.10"
plotCounts(ddsMF, gene = genename, intgroup=c("condition1"), main="Distribution of UBC expression across groups (before DE analysis)")
genename <- "ENSG00000134644.11"
plotCounts(ddsMF, gene = genename, intgroup=c("condition1"), main="Distribution of PUM1 expression across groups (before DE analysis)")
ubctempassay <- subset(resBasal, rownames(resBasal)=="ENSG00000150991.10")
ubctempassay[,1:6]
pum1tempassay <- subset(resBasal, rownames(resBasal)=="ENSG00000134644.11")
pum1tempassay[,1:6]
genenames <- c("ENSG00000150991.10", "ENSG00000134644.11")
counts(ddsHTSeqMF)
counts(dds)
set1 <- RUVg(counts(ddsHTSeqMF), genenames, k=1)
plotPCA(set1$normalizedCounts)
plotRLE(counts(dds), outline=FALSE, ylim=c(-4, 4))
plotRLE(set1$normalizedCounts, outline=FALSE, ylim=c(-4, 4))
plotRLE(counts(ddsHTSeqMF), outline=FALSE, ylim=c(-4, 4))
pcaset1 <- set1
countVar2=1
for (sample in colnames(pcaset1$normalizedCounts)){
if (stri_detect_fixed(sample,"LIB")==TRUE){
colnames(pcaset1$normalizedCounts)[countVar2] <- "Nigerian"
countVar2=countVar2+1
} else if (stri_detect_fixed(sample,"black")==TRUE){
colnames(pcaset1$normalizedCounts)[countVar2] <- "TCGA_black"
countVar2=countVar2+1
} else if (stri_detect_fixed(sample,"white")==TRUE){
colnames(pcaset1$normalizedCounts)[countVar2] <- "TCGA_white"
countVar2=countVar2+1
} else{
colnames(pcaset1$normalizedCounts)[countVar2] <- "TCGA_other"
countVar2=countVar2+1
}
}
View(pcaset1)
View(set1)
View(set1)
View(set1)
counts(ddsHTSeqMF)
pcaset1$normalizedCounts
plotPCA(pcaset1)
plot(pcaset1)
plotPCA(pcaset1, intgroup=pcaset1$normalizedCounts, ntop=500)
colnames(pcaset1$normalizedCounts)
plotPCA(pcaset1, intgroup=colnames(pcaset1$normalizedCounts), ntop=500)
plotPCA(pcaset1$normalizedCounts, intgroup=colnames(pcaset1$normalizedCounts), ntop=500)
plotPCA(pcaset1$normalizedCounts, intgroup=colnames(pcaset1$normalizedCounts), ntop=500, colorpanel(2))
plotPCA(pcaset1$normalizedCounts, intgroup=colnames(pcaset1$normalizedCounts), ntop=500, colorpanel(2, low))
plotPCA(pcaset1$normalizedCounts, intgroup=colnames(pcaset1$normalizedCounts), ntop=500, color=colnames(pcaset1$normalizedCounts))
plotPCA(pcaset1$normalizedCounts, intgroup=colnames(pcaset1$normalizedCounts), ntop=500, color=c("red", "blue"))
plotPCA(pcaset1$normalizedCounts, intgroup=colnames(pcaset1$normalizedCounts), ntop=500, color=c("Red", "Blue", "Green", "Yellow"))
warnings()
plotPCA(pcaset1$normalizedCounts, intgroup=colnames(pcaset1$normalizedCounts), ntop=500, col=c("Red", "Blue"))
plotPCA(pcaset1$normalizedCounts, intgroup=colnames(pcaset1$normalizedCounts), ntop=500, col=c("Red", "Blue", "Green"))
plotPCA(pcaset1$normalizedCounts, intgroup=colnames(pcaset1$normalizedCounts), ntop=500, col=c("Red", "Blue", "Green", "Black"))
plotPCA(pcaset1$normalizedCounts, intgroup=colnames(pcaset1$normalizedCounts), ntop=500)
plotPCA(pcaset1$normalizedCounts, intgroup=colnames(pcaset1$normalizedCounts), col=c("Red", "Blue", "Green", "Black"))
plotPCA(pcaset1$normalizedCounts, intgroup=colnames(pcaset1$normalizedCounts), col=c("Red"="Nigerian", "Blue", "Green", "Black"))
plotPCA(pcaset1$normalizedCounts, intgroup=colnames(pcaset1$normalizedCounts))
colnames(pcaset1$normalizedCounts)
condition <- c("Nigerian", "TCGA_black", "TCGA_white", "TCGA_other")
plotPCA(pcaset1$normalizedCounts, intgroup=condition)
plotPCA(pcaset1$normalizedCounts, intgroup=colnames(pcaset1$normalizedCounts), col=condition)
plotPCA(pcaset1$normalizedCounts, intgroup=condition)
plotPCA(pcaset1$normalizedCounts, intgroup=colnames(pcaset1$normalizedCounts))
colors <- brewer.pal(4, "Set2")
library(RColorBrewer)
colors <- brewer.pal(4, "Set2")
plotPCA(pcaset1$normalizedCounts, intgroup=colnames(pcaset1$normalizedCounts), col=colors)
plotPCA(pcaset1, intgroup=colnames(pcaset1$normalizedCounts), col=colors)
plotPCA(pcaset1$W, intgroup=colnames(pcaset1$normalizedCounts), col=colors)
pcaset1 <- set1
countVar2=1
for (sample in colnames(pcaset1$normalizedCounts)){
if (stri_detect_fixed(sample,"LIB")==TRUE){
colnames(pcaset1$normalizedCounts)[countVar2] <- "Nigerian"
countVar2=countVar2+1
} else{
colnames(pcaset1$normalizedCounts)[countVar2] <- "TCGA"
countVar2=countVar2+1
}
}
colors <- brewer.pal(2, "Set2")
plotPCA(pcaset1$normalizedCounts, intgroup=colnames(pcaset1$normalizedCounts), col=colors)
plotPCA(pcaset1$normalizedCounts, intgroup=colnames(pcaset1$normalizedCounts), col=c("Red", "Blue"))
warnings()
colnames(pcaset1$normalizedCounts)
pcaset1
pcaset1 <- set1
countVar2=1
plotPCA(set1$normalizedCounts, intgroup=colnames(set1$normalizedCounts), col=colors)
sampleTableRUV <- data.frame(sampleName=gsub(".htseq.counts","",sampleFiles),
fileName=sampleFiles,
condition1=sampleConditionrace,
condition2=sampleConditionPAM50,
W_1 = set1$W)
View(sampleTableRUV)
View(set1)
sampleTablebe$sampleCondition <- paste(sampleTablebe$condition1, sampleTablebe$condition2, sep=".")
sampleTableRUV$sampleCondition <- paste(sampleTableRUV$condition1, sampleTableRUV$condition2, sep=".")
sampleTableRUV$sampleCondition <- paste(sampleTableRUV$condition1, sampleTableRUV$condition2, sep=".")
ddsHTSeqMFRUV <- DESeqDataSetFromHTSeqCount(sampleTable=sampleTableRUV,
directory=FOLDER,
design= ~W_1+sampleCondition)
ddsHTSeqMFRUV <- ddsHTSeqMFRUV[rowSums(counts(ddsHTSeqMFRUV)) > 0, ]
ddsHTSeqMFRUV$sampleCondition <- relevel(ddsHTSeqMFRUV$sampleCondition, ref = "Nigerian.Basal") #explicitly making the Nigerian Basal patients the reference population
ddsMFRUV <- DESeq(ddsHTSeqMFRUV) #This will refer to a version that does not include batch correction outside of what is accomplished through DESeq2 alone.
cat("MA Plot 1: Original differential expression")
res <- lfcShrink(ddsMF, coef="sampleCondition_TCGA_white.Basal_vs_Nigerian.Basal", type="ashr", optmethod = "mixEM")
DESeq2::plotMA(res, ylim=c(-10,10), xlim=c(0.1,200))
cat("MA Plot 2: RUVSeq-corrected differential expression")
res2 <- lfcShrink(ddsMFRUV, coef="sampleCondition_TCGA_white.Basal_vs_Nigerian.Basal", type="ashr" , optmethod = "mixEM")
DESeq2::plotMA(res2, ylim=c(-10,10), xlim=c(0.1,200))
restemp <- lfcShrink(ddsMF, contrast=c("sampleCondition", "TCGA_black.Basal", "TCGA_white.Basal"), res = diffTCGA, type="ashr", optmethod = "mixEM")
restemp$temp <- row.names(restemp)
restemp$temp <- gsub("[.].+", "", restemp$temp)
restemp$symbol <- mapIds(EnsDb.Hsapiens.v75,
keys=restemp$temp,
column="SYMBOL",
keytype="GENEID",
multiVals="first")
hist(restemp$pvalue, main="Histogram of unadjusted p-values of differential\n gene expression between basal breast cancers \nin TCGA black and \nTCGA white breast cancer patients")
with(restemp, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between basal \nbreast cancers in TCGA black and \nTCGA white breast cancer patients", xlim=c(-50,50), ylim=c(0,70)))
with(subset(restemp, padj<0.05 & abs(log2FoldChange)>25), points(log2FoldChange, -log10(pvalue), pch=20, col="blue"))
with(subset(restemp, padj<0.05 & abs(log2FoldChange)>25), textxy(log2FoldChange, -log10(padj), labs=symbol, cex=.5))
diffTCGA2<- results(ddsMFRUV, contrast=c("sampleCondition", "TCGA_black.Basal", "TCGA_white.Basal"), alpha=0.05)
diffTCGA2 <- diffTCGA2[(diffTCGA2$log2FoldChange >= fc | diffTCGA2$log2FoldChange <= -fc),]
diffTCGA2 <- subset(diffTCGA2, padj < fdr)
restemp2 <- NULL
restemp2 <- lfcShrink(ddsMFRUV, contrast=c("sampleCondition", "TCGA_black.Basal", "TCGA_white.Basal"), res = diffTCGA2, type="ashr", optmethod = "mixEM")
restemp2$temp <- row.names(restemp2)
restemp2$temp <- gsub("[.].+", "", restemp2$temp)
restemp2$symbol <- mapIds(EnsDb.Hsapiens.v75,
keys=restemp2$temp,
column="SYMBOL",
keytype="GENEID",
multiVals="first")
hist(restemp2$pvalue, main="Histogram of unadjusted p-values of differential\n gene expression between basal breast cancers \nin TCGA black and white \n breast cancer patients\nRUV corrected")
with(restemp2, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between basal \nbreast cancers in TCGA black and \nTCGA white breast cancer patients\nRUV corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(restemp, padj<0.05 & abs(log2FoldChange)>25), points(log2FoldChange, -log10(pvalue), pch=20, col="blue"))
with(subset(restemp, padj<0.05 & abs(log2FoldChange)>25), textxy(log2FoldChange, -log10(padj), labs=symbol, cex=.5))
restemp <- NULL
restemp <- lfcShrink(ddsMF, contrast=c("sampleCondition", "Nigerian.Basal", "TCGA_white.Basal"), res = resBasal, type="ashr", optmethod = "mixEM")
restemp$temp <- row.names(restemp)
restemp$temp <- gsub("[.].+", "", restemp$temp)
restemp$symbol <- mapIds(EnsDb.Hsapiens.v75,
keys=restemp$temp,
column="SYMBOL",
keytype="GENEID",
multiVals="first")
hist(restemp$pvalue, main="Histogram of unadjusted p-values of differential\n gene expression between basal breast cancers \nin Nigerian and \nTCGA white breast cancer patients")
with(restemp, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between basal \nbreast cancers in Nigerian and \nTCGA white breast cancer patients", xlim=c(-50,50), ylim=c(0,70)))
with(subset(restemp, padj<0.05 & abs(log2FoldChange)>25), points(log2FoldChange, -log10(pvalue), pch=20, col="blue"))
with(subset(restemp, padj<0.05 & abs(log2FoldChange)>25), textxy(log2FoldChange, -log10(padj), labs=symbol, cex=.5))
resBasal2<- results(ddsMFRUV, contrast=c("sampleCondition", "Nigerian.Basal", "TCGA_white.Basal"), alpha=0.05)
resBasal2 <- resBasal2[(resBasal2$log2FoldChange >= fc | resBasal2$log2FoldChange <= -fc),]
resBasal2 <- subset(resBasal2, padj < fdr)
restemp2 <- NULL
restemp2 <- lfcShrink(ddsMFRUV, contrast=c("sampleCondition", "Nigerian.Basal", "TCGA_white.Basal"), res = resBasal2, type="ashr", optmethod = "mixEM")
restemp2$temp <- row.names(restemp2)
restemp2$temp <- gsub("[.].+", "", restemp2$temp)
restemp2$symbol <- mapIds(EnsDb.Hsapiens.v75,
keys=restemp2$temp,
column="SYMBOL",
keytype="GENEID",
multiVals="first")
hist(restemp2$pvalue, main="Histogram of unadjusted p-values of differential\n gene expression between basal breast cancers \nin Nigerian and \nTCGA white breast cancer patients\n batch corrected")
with(restemp2, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between basal \nbreast cancers in Nigerian and \nTCGA white breast cancer patients\n RUV corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(restemp2, padj<0.05 & abs(log2FoldChange)>25), points(log2FoldChange, -log10(pvalue), pch=20, col="blue"))
with(subset(restemp2, padj<0.05 & abs(log2FoldChange)>25), textxy(log2FoldChange, -log10(padj), labs=symbol, cex=.5))
plotPCA(set1$normalizedCounts)
plotPCA(sampleTableRUV$W_1)
plotPCA(sampleTableRUV$W_1, intgroup=c("condition1, condition2"))
View(ddsHTSeqMFRUV)
plotPCA(set1$normalizedCounts)
plotPCA(set1)
set2 <- betweenLaneNormalization(counts(ddsHTSeqMF), which="upper")
plotPCA(set2)
set2 <- RUVg(set2, genenames, k=1)
plotRLE(set2$normalizedCounts, outline=FALSE, ylim=c(-4,4))
plotPCA(set2)
plotPCA(set2$normalizedCounts)
sampleTableRUV2 <- data.frame(sampleName=gsub(".htseq.counts","",sampleFiles),
fileName=sampleFiles,
condition1=sampleConditionrace,
condition2=sampleConditionPAM50,
W_1 = set2$W)
sampleTableRUV2$sampleCondition <- paste(sampleTableRUV2$condition1, sampleTableRUV2$condition2, sep=".")
ddsHTSeqMFRUV2 <- DESeqDataSetFromHTSeqCount(sampleTable=sampleTableRUV2,
directory=FOLDER,
design= ~W_2+sampleCondition)
sampleTableRUV2 <- data.frame(sampleName=gsub(".htseq.counts","",sampleFiles),
fileName=sampleFiles,
condition1=sampleConditionrace,
condition2=sampleConditionPAM50,
W_2 = set2$W)
sampleTableRUV2$sampleCondition <- paste(sampleTableRUV2$condition1, sampleTableRUV2$condition2, sep=".")
ddsHTSeqMFRUV2 <- DESeqDataSetFromHTSeqCount(sampleTable=sampleTableRUV2,
directory=FOLDER,
design= ~W_2+sampleCondition)
View(sampleTableRUV2)
rm(sampleTableRUV2)
sampleTableRUV2 <- data.frame(sampleName=gsub(".htseq.counts","",sampleFiles),
fileName=sampleFiles,
condition1=sampleConditionrace,
condition2=sampleConditionPAM50,
W_2 = set2$W)
sampleTableRUV2$sampleCondition <- paste(sampleTableRUV2$condition1, sampleTableRUV2$condition2, sep=".")
ddsHTSeqMFRUV2 <- DESeqDataSetFromHTSeqCount(sampleTable=sampleTableRUV2,
directory=FOLDER,
design= ~W_2+sampleCondition)
View(sampleTableRUV2)
View(sampleTableRUV2)
set2$W
rm(sampleTableRUV2)
sampleTableRUV2 <- data.frame(sampleName=gsub(".htseq.counts","",sampleFiles),
fileName=sampleFiles,
condition1=sampleConditionrace,
condition2=sampleConditionPAM50,
W_1 = set2$W)
sampleTableRUV2$sampleCondition <- paste(sampleTableRUV2$condition1, sampleTableRUV2$condition2, sep=".")
ddsHTSeqMFRUV2 <- DESeqDataSetFromHTSeqCount(sampleTable=sampleTableRUV2,
directory=FOLDER,
design= ~W_1+sampleCondition)
ddsHTSeqMFRUV2 <- ddsHTSeqMFRUV2[rowSums(counts(ddsHTSeqMFRUV2)) > 0, ]
ddsHTSeqMFRUV2$sampleCondition <- relevel(ddsHTSeqMFRUV2$sampleCondition, ref = "Nigerian.Basal") #explicitly making the Nigerian Basal patients the reference population
ddsMFRUV2 <- DESeq(ddsHTSeqMFRUV2) #Running differential expression with the two housekeeping genes for normalization
cat("MA Plot 3: RUVSeq-corrected differential expression with upper quartile normalization")
res2 <- lfcShrink(ddsMFRUV2, coef="sampleCondition_TCGA_white.Basal_vs_Nigerian.Basal", type="ashr" , optmethod = "mixEM")
DESeq2::plotMA(res2, ylim=c(-10,10), xlim=c(0.1,200))
diffTCGA3<- results(ddsMFRUV2, contrast=c("sampleCondition", "TCGA_black.Basal", "TCGA_white.Basal"), alpha=0.05)
diffTCGA3 <- diffTCGA3[(diffTCGA3$log2FoldChange >= fc | diffTCGA3$log2FoldChange <= -fc),]
diffTCGA3 <- subset(diffTCGA3, padj < fdr)
restemp2 <- NULL
restemp2 <- lfcShrink(ddsMFRUV2, contrast=c("sampleCondition", "TCGA_black.Basal", "TCGA_white.Basal"), res = diffTCGA3, type="ashr", optmethod = "mixEM")
restemp2$temp <- row.names(restemp2)
restemp2$temp <- gsub("[.].+", "", restemp2$temp)
restemp2$symbol <- mapIds(EnsDb.Hsapiens.v75,
keys=restemp2$temp,
column="SYMBOL",
keytype="GENEID",
multiVals="first")
hist(restemp2$pvalue, main="Histogram of unadjusted p-values of differential\n gene expression between basal breast cancers \nin TCGA black and white \n breast cancer patients\nRUV+UQ corrected")
with(restemp2, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between basal \nbreast cancers in TCGA black and \nTCGA white breast cancer patients\nRUV+UQ corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(restemp, padj<0.05 & abs(log2FoldChange)>25), points(log2FoldChange, -log10(pvalue), pch=20, col="blue"))
with(subset(restemp, padj<0.05 & abs(log2FoldChange)>25), textxy(log2FoldChange, -log10(padj), labs=symbol, cex=.5))
resBasal3<- results(ddsMFRUV2, contrast=c("sampleCondition", "Nigerian.Basal", "TCGA_white.Basal"), alpha=0.05)
resBasal3 <- resBasal3[(resBasal3$log2FoldChange >= fc | resBasal3$log2FoldChange <= -fc),]
resBasal3 <- subset(resBasal3, padj < fdr)
restemp2 <- NULL
restemp2 <- lfcShrink(ddsMFRUV2, contrast=c("sampleCondition", "TCGA_black.Basal", "TCGA_white.Basal"), res = resBasal3, type="ashr", optmethod = "mixEM")
restemp2$temp <- row.names(restemp2)
restemp2$temp <- gsub("[.].+", "", restemp2$temp)
restemp2$symbol <- mapIds(EnsDb.Hsapiens.v75,
keys=restemp2$temp,
column="SYMBOL",
keytype="GENEID",
multiVals="first")
hist(restemp2$pvalue, main="Histogram of unadjusted p-values of differential\n gene expression between basal breast cancers \nin Nigerian and \nTCGA white breast cancer patients\n RUV+UQ corrected")
with(restemp2, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between basal \nbreast cancers in Nigerian and \nTCGA white breast cancer patients\n RUV+UQ corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(restemp2, padj<0.05 & abs(log2FoldChange)>25), points(log2FoldChange, -log10(pvalue), pch=20, col="blue"))
with(subset(restemp2, padj<0.05 & abs(log2FoldChange)>25), textxy(log2FoldChange, -log10(padj), labs=symbol, cex=.5))
countmatrix <- assay(ddsHTSeqMF) #Raw counts organized into matrix format from individual files
countmatrix2 <- log2(countmatrix + 1) #Basic transformation of the count data
countmatrix2 = countmatrix2 [rowMeans(countmatrix2) > 1, ] #Remove if there is no data re: counts
plot(density(countmatrix2[,1]),lwd=3,ylim=c(0,.30), main="Density of counts with log2[count]+1 transformation ONLY")
for(i in 1:184){lines(density(countmatrix2[,i]),lwd=3)} #This demonstrates that there is a difference in distributions between the Nigerian and TCGA data with basic log transformation normalization
norm_countmatrix <- as.matrix(countmatrix2)
norm_countmatrix = normalize.quantiles(norm_countmatrix)
#plot(density(norm_countmatrix[,1]),lwd=3,ylim=c(0,.3), main="Density of counts with quantile normalization")
#for(i in 1:184){lines(density(norm_countmatrix[,i]),lwd=3)} #This demonstrates the effect of comparative quantile normalization
colnames (norm_countmatrix) <- colnames (countmatrix2)
rownames (norm_countmatrix) <- rownames (countmatrix2)
norm_countmatrix <- as.data.frame(norm_countmatrix)
countmatrixNigerian <- dplyr::select(norm_countmatrix, contains("LIB"))
plot(density(countmatrixNigerian[,1]),lwd=3,ylim=c(0,.3), main="Density of counts with quantile normalization - Nigerian")
for(i in 1:98){lines(density(countmatrixNigerian[,i]),lwd=3)} #This demonstrates the result of the normalized Nigerian counts separately
tcgacolnames <- colnames(countmatrix)
tcgacolnames <- setdiff(tcgacolnames, colnames(countmatrixNigerian))
countmatrixTCGA <- norm_countmatrix[ , tcgacolnames]
plot(density(countmatrixTCGA[,1]),lwd=3,ylim=c(0,.3), main="Density of counts with quantile normalization - TCGA")
for(i in 1:85){lines(density(countmatrixTCGA[,i]),lwd=3)} #This demonstrates the result of the normalized TCGA counts separately
t.test(countmatrixNigerian, countmatrixTCGA) #Demonstrating that there is no statistically significant difference between the distributions of both plots
norm_countmatrix <- as.data.frame(norm_countmatrix)
t_norm_countmatrix <- t(norm_countmatrix)
t_norm_countmatrix <- cbind (t_norm_countmatrix, sampleTable2) #This binds the characteristics of the original patients to the quantile normalized counts. CBinding was checked to make sure that patients were correctly aligned to characteristics.
quant.pca <- prcomp(t_norm_countmatrix[,1:16731])
autoplot(quant.pca, data=t_norm_countmatrix, colour='sampleCondition', main="PCA of quantile normalization results")
set1counts.pca <- prcomp(set1$normalizedCounts)
autoplot(set1counts.pca, data=set1, colour=colnames(set1$normalizedCounts), main="PCA of set1 RUVseq normalization results without upper quartile preparation")
autoplot(set1counts.pca, data=set1$normalizedCounts, colour=colnames(set1$normalizedCounts), main="PCA of set1 RUVseq normalization results without upper quartile preparation")
set1counts.pca <- prcomp(set1)
autoplot(set1counts.pca, data=set1$normalizedCounts, colour='colnames(set1$normalizedCounts)', main="PCA of set1 RUVseq normalization results without upper quartile preparation")
autoplot(set1counts.pca, data=set1$normalizedCounts, main="PCA of set1 RUVseq normalization results without upper quartile preparation")
set1counts.pca <- prcomp(set1$normalizedCounts)
autoplot(set1counts.pca, data=set1, main="PCA of set1 RUVseq normalization results without upper quartile preparation")
plotPCA(set1$normalizedCounts)
plotPCA(set1$normalizedCounts, main="RUVSeq without upper quartile preparation")
plotPCA(set1$normalizedCounts, main="Housekeeping gene normalization without upper quartile preparation")
plotPCA(set2$normalizedCounts, main="Housekeeping gene normalization with upper quartile preparation")
with(restemp2, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between basal \nbreast cancers in Nigerian and \nTCGA white breast cancer patients\n RUV+UQ corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(restemp2, padj<0.05 & abs(log2FoldChange)>25), points(log2FoldChange, -log10(pvalue), pch=20, col="blue"))
with(subset(restemp2, padj<0.05 & abs(log2FoldChange)>25), textxy(log2FoldChange, -log10(padj), labs=symbol, cex=.5))
with(restemp2, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between basal \nbreast cancers in Nigerian and \nTCGA white breast cancer patients\n RUV+UQ corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(restemp2, padj<0.05 & abs(log2FoldChange)>25), points(log2FoldChange, -log10(pvalue), pch=20, col="blue"))
with(subset(restemp2, padj<0.05 & abs(log2FoldChange)>25), textxy(log2FoldChange, -log10(padj), labs=symbol, cex=0))
with(restemp2, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between basal \nbreast cancers in Nigerian and \nTCGA white breast cancer patients\n RUV+UQ corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(restemp2, padj<0.05 & abs(log2FoldChange)>25), textxy(log2FoldChange, -log10(padj), labs=symbol, cex=0.5))
with(restemp2, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between basal \nbreast cancers in Nigerian and \nTCGA white breast cancer patients\n RUV+UQ corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(restemp2, padj<0.01 & abs(log2FoldChange)>25), textxy(log2FoldChange, -log10(padj), labs=symbol, cex=0.5))
knit_with_parameters('~/Research-Local/RNAseq-Local/TCGA-Nigerian-RNAseq/analysis/NigerianTCGArawcountsDeSeq2-pc2.Rmd')
unlink('~/Research-Local/RNAseq-Local/TCGA-Nigerian-RNAseq/analysis/NigerianTCGArawcountsDeSeq2-pc2_cache', recursive = TRUE)
remove.packages("yaml")
install.packages("yaml")
install.packages("yaml")
library(yaml)
remove.packages(yaml)
remove.packages(`yaml`)
remove.packages("yaml")
install.packages("yaml")
remove.packages("rmarkdown")
install.packages("rmarkdown")
remove.packages("knitr")
install.packages("rmarkdown")
install.packages("Rmarkdown")
install.packages("rmarkdown")
y
install.packages("rmarkdown")
install.packages(knitr)
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
unlink('analysis/NigerianTCGArawcountsDeSeq2-proteincoding_cache', recursive = TRUE)
install.packages("yaml")
install.packages("yaml")
install.packages("rmarkdown")
install.packages("knitr")
install.packages("yaml")
install.packages("yaml")
install.packages("rmarkdown")
install.packages("knitr")
knit_with_parameters('~/Research-Local/RNAseq-Local/TCGA-Nigerian-RNAseq/analysis/NigerianTCGArawcountsDeSeq2-pc2.Rmd')
