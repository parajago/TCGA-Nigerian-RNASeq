quantdata <- as.data.frame(t(counts(ddsHTSeqMF)))
quantdata <- quantdata[quantids,]
quantdata <- t(quantdata)
d0 <- DGEList(counts=quantdata, genes=annotation)
dim(d0)
cutoff <- 10
drop <- which(apply(cpm(d0), 1, max) < cutoff)
d <- d0[-drop,]
dim(d) # Number of genes after taking out low expressed genes
v=voom(d,designNTW,plot=T, normalize="quantile")
contr.matrix <- makeContrasts(NigerianvsTCGAblackBasal = Nigerian.Basal-TCGA_black.Basal, levels=colnames(designNTW))
fit <- lmFit(v, designNTW)
fit <- contrasts.fit(fit, contrasts=contr.matrix)
fit <- eBayes(fit)
dt <- decideTests(fit)
summary(dt)
hist(fit$p.value, ylim=c(0,3000), main="Histogram of unadjusted p-values of differential\n gene expression between basal breast cancers \nin Nigerian and \nTCGA black breast cancer patients\n quantile corrected")
qvals<-p.adjust(fit$p.value[,1], method='fdr')
df_limma <- data_frame(log2FoldChange = fit$coefficients[,1],
pval = fit$p.value[,1],
padj = qvals,
anno = fit$genes)
with(df_limma, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between basal \nbreast cancers in Nigerian and \nTCGA black breast cancer patients\nquantile corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), points(log2FoldChange, -log10(padj), pch=20, col="blue"))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), textxy(log2FoldChange, -log10(padj), labs=anno$symbol, cex=.5))
df_limmaprint <- as.data.frame(df_limma)
df_limmaprint <- df_limmaprint %>% arrange(log2FoldChange) %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(abs(log2FoldChange)>0.58)
top_n(df_limmaprint, 10, log2FoldChange)
top_n(df_limmaprint, -10, log2FoldChange)
write.csv(df_limmaprint, file = "Nigerian-TCGAblack-Basal-DE.csv", row.names = FALSE)
sampleConditionrace
sampleConditionPAM50
designNTW <- design
designNTW$sampleCondition <- ifelse (designNTW$sampleCondition=="Nigerian.Her2", 0, as.character(designNTW$sampleCondition))
designNTW$sampleCondition <- ifelse (designNTW$sampleCondition=="TCGA_white.Her2", 1, as.character(designNTW$sampleCondition))
designNTW$sampleCondition <- ifelse (designNTW$sampleCondition==0 | designNTW$sampleCondition==1, designNTW$sampleCondition, NA)
designNTW <- designNTW %>% subset(is.na(sampleCondition)==FALSE)
designNTW$Nigerian.Her2 <- ifelse (designNTW$sampleCondition==0, 1, 0)
designNTW$TCGA_white.Her2 <- ifelse (designNTW$sampleCondition==1, 1, 0)
designNTW$sampleCondition <- NULL
View(designNTW)
mm <- model.matrix(~0+designNTW$Nigerian.Her2+designNTW$TCGA_white.Her2)
quantids <- rownames(designNTW)
rownames(mm) <- quantids
colnames(mm) <- c("Nigerian", "TCGA_white")
View(mm)
quantdata <- as.data.frame(t(counts(ddsHTSeqMF)))
quantdata <- quantdata[quantids,]
quantdata <- t(quantdata)
d0 <- DGEList(counts=quantdata, genes=annotation)
dim(d0)
cutoff <- 10
drop <- which(apply(cpm(d0), 1, max) < cutoff)
d <- d0[-drop,]
dim(d) # Number of genes after taking out low expressed genes
v=voom(d,designNTW,plot=T, normalize="quantile")
contr.matrix <- makeContrasts(NigerianvsTCGAwhiteHer2 = Nigerian.Her2-TCGA_white.Her2, levels=colnames(designNTW))
fit <- lmFit(v, designNTW)
fit <- contrasts.fit(fit, contrasts=contr.matrix)
fit <- eBayes(fit)
dt <- decideTests(fit)
summary(dt)
hist(fit$p.value, ylim=c(0,3000), main="Histogram of unadjusted p-values of differential\n gene expression between Her2 breast cancers \nin Nigerian and \nTCGA white breast cancer patients\n quantile corrected")
qvals<-p.adjust(fit$p.value[,1], method='fdr')
df_limma <- data_frame(log2FoldChange = fit$coefficients[,1],
pval = fit$p.value[,1],
padj = qvals,
anno = fit$genes)
with(df_limma, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between Her2 \nbreast cancers in Nigerian and \nTCGA white breast cancer patients\nquantile corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), points(log2FoldChange, -log10(padj), pch=20, col="blue"))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), textxy(log2FoldChange, -log10(padj), labs=anno$symbol, cex=.5))
df_limmaprint <- as.data.frame(df_limma)
df_limmaprint <- df_limmaprint %>% arrange(log2FoldChange) %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(abs(log2FoldChange)>0.58)
top_n(df_limmaprint, 10, log2FoldChange)
top_n(df_limmaprint, -10, log2FoldChange)
write.csv(df_limmaprint, file = "Nigerian-TCGAwhite-Her2-DE.csv", row.names = FALSE)
designNTW <- design
designNTW$sampleCondition <- ifelse (designNTW$sampleCondition=="Nigerian.LumA", 0, as.character(designNTW$sampleCondition))
designNTW$sampleCondition <- ifelse (designNTW$sampleCondition=="TCGA_white.LumA", 1, as.character(designNTW$sampleCondition))
designNTW$sampleCondition <- ifelse (designNTW$sampleCondition==0 | designNTW$sampleCondition==1, designNTW$sampleCondition, NA)
designNTW <- designNTW %>% subset(is.na(sampleCondition)==FALSE)
designNTW$Nigerian.LumA <- ifelse (designNTW$sampleCondition==0, 1, 0)
designNTW$TCGA_white.LumA <- ifelse (designNTW$sampleCondition==1, 1, 0)
designNTW$sampleCondition <- NULL
View(designNTW)
mm <- model.matrix(~0+designNTW$Nigerian.LumA+designNTW$TCGA_white.LumA)
quantids <- rownames(designNTW)
rownames(mm) <- quantids
colnames(mm) <- c("Nigerian", "TCGA_white")
View(mm)
quantdata <- as.data.frame(t(counts(ddsHTSeqMF)))
quantdata <- quantdata[quantids,]
quantdata <- t(quantdata)
d0 <- DGEList(counts=quantdata, genes=annotation)
dim(d0)
cutoff <- 10
drop <- which(apply(cpm(d0), 1, max) < cutoff)
d <- d0[-drop,]
dim(d) # Number of genes after taking out low expressed genes
v=voom(d,designNTW,plot=T, normalize="quantile")
contr.matrix <- makeContrasts(NigerianvsTCGAwhiteLumA= Nigerian.LumA-TCGA_white.LumA, levels=colnames(designNTW))
fit <- lmFit(v, designNTW)
fit <- contrasts.fit(fit, contrasts=contr.matrix)
fit <- eBayes(fit)
dt <- decideTests(fit)
summary(dt)
hist(fit$p.value, ylim=c(0,3000), main="Histogram of unadjusted p-values of differential\n gene expression between LumA breast cancers \nin Nigerian and \nTCGA white breast cancer patients\n quantile corrected")
qvals<-p.adjust(fit$p.value[,1], method='fdr')
df_limma <- data_frame(log2FoldChange = fit$coefficients[,1],
pval = fit$p.value[,1],
padj = qvals,
anno = fit$genes)
with(df_limma, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between LumA \nbreast cancers in Nigerian and \nTCGA white breast cancer patients\nquantile corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), points(log2FoldChange, -log10(padj), pch=20, col="blue"))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), textxy(log2FoldChange, -log10(padj), labs=anno$symbol, cex=.5))
df_limmaprint <- as.data.frame(df_limma)
df_limmaprint <- df_limmaprint %>% arrange(log2FoldChange) %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(abs(log2FoldChange)>0.58)
top_n(df_limmaprint, 10, log2FoldChange)
top_n(df_limmaprint, -10, log2FoldChange)
write.csv(df_limmaprint, file = "Nigerian-TCGAwhite-LumA-DE.csv", row.names = FALSE)
designNTW <- design
designNTW$sampleCondition <- ifelse (designNTW$sampleCondition=="Nigerian.LumA", 0, as.character(designNTW$sampleCondition))
designNTW$sampleCondition <- ifelse (designNTW$sampleCondition=="TCGA_black.LumA", 1, as.character(designNTW$sampleCondition))
designNTW$sampleCondition <- ifelse (designNTW$sampleCondition==0 | designNTW$sampleCondition==1, designNTW$sampleCondition, NA)
designNTW <- designNTW %>% subset(is.na(sampleCondition)==FALSE)
designNTW$Nigerian.LumA <- ifelse (designNTW$sampleCondition==0, 1, 0)
designNTW$TCGA_black.LumA <- ifelse (designNTW$sampleCondition==1, 1, 0)
designNTW$sampleCondition <- NULL
mm <- model.matrix(~0+designNTW$Nigerian.LumA+designNTW$TCGA_black.LumA)
quantids <- rownames(designNTW)
rownames(mm) <- quantids
colnames(mm) <- c("Nigerian", "TCGA_black")
quantdata <- as.data.frame(t(counts(ddsHTSeqMF)))
quantdata <- quantdata[quantids,]
quantdata <- t(quantdata)
d0 <- DGEList(counts=quantdata, genes=annotation)
cutoff <- 10
drop <- which(apply(cpm(d0), 1, max) < cutoff)
d <- d0[-drop,]
dim(d) # Number of genes after taking out low expressed genes
v=voom(d,designNTW,plot=T, normalize="quantile")
contr.matrix <- makeContrasts(NigerianvsTCGAblackLumA= Nigerian.LumA-TCGA_black.LumA, levels=colnames(designNTW))
fit <- lmFit(v, designNTW)
fit <- contrasts.fit(fit, contrasts=contr.matrix)
fit <- eBayes(fit)
dt <- decideTests(fit)
summary(dt)
hist(fit$p.value, ylim=c(0,3000), main="Histogram of unadjusted p-values of differential\n gene expression between LumA breast cancers \nin Nigerian and \nTCGA black breast cancer patients\n quantile corrected")
qvals<-p.adjust(fit$p.value[,1], method='fdr')
df_limma <- data_frame(log2FoldChange = fit$coefficients[,1],
pval = fit$p.value[,1],
padj = qvals,
anno = fit$genes)
with(df_limma, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between LumA \nbreast cancers in Nigerian and \nTCGA black breast cancer patients\nquantile corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), points(log2FoldChange, -log10(padj), pch=20, col="blue"))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), textxy(log2FoldChange, -log10(padj), labs=anno$symbol, cex=.5))
df_limmaprint <- as.data.frame(df_limma)
df_limmaprint <- df_limmaprint %>% arrange(log2FoldChange) %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(abs(log2FoldChange)>0.58)
top_n(df_limmaprint, 10, log2FoldChange)
top_n(df_limmaprint, -10, log2FoldChange)
write.csv(df_limmaprint, file = "Nigerian-TCGAblack-LumA-DE.csv", row.names = FALSE)
designNTW <- design
designNTW$sampleCondition <- ifelse (designNTW$sampleCondition=="Nigerian.LumB", 0, as.character(designNTW$sampleCondition))
designNTW$sampleCondition <- ifelse (designNTW$sampleCondition=="TCGA_white.LumB", 1, as.character(designNTW$sampleCondition))
designNTW$sampleCondition <- ifelse (designNTW$sampleCondition==0 | designNTW$sampleCondition==1, designNTW$sampleCondition, NA)
designNTW <- designNTW %>% subset(is.na(sampleCondition)==FALSE)
designNTW$Nigerian.LumB <- ifelse (designNTW$sampleCondition==0, 1, 0)
designNTW$TCGA_white.LumB <- ifelse (designNTW$sampleCondition==1, 1, 0)
designNTW$sampleCondition <- NULL
mm <- model.matrix(~0+designNTW$Nigerian.LumB+designNTW$TCGA_white.LumB)
quantids <- rownames(designNTW)
rownames(mm) <- quantids
colnames(mm) <- c("Nigerian", "TCGA_white")
quantdata <- as.data.frame(t(counts(ddsHTSeqMF)))
quantdata <- quantdata[quantids,]
quantdata <- t(quantdata)
d0 <- DGEList(counts=quantdata, genes=annotation)
cutoff <- 10
drop <- which(apply(cpm(d0), 1, max) < cutoff)
d <- d0[-drop,]
dim(d) # Number of genes after taking out low expressed genes
v=voom(d,designNTW,plot=T, normalize="quantile")
contr.matrix <- makeContrasts(NigerianvsTCGAwhiteLumB= Nigerian.LumB-TCGA_white.LumB, levels=colnames(designNTW))
fit <- lmFit(v, designNTW)
fit <- contrasts.fit(fit, contrasts=contr.matrix)
fit <- eBayes(fit)
dt <- decideTests(fit)
summary(dt)
hist(fit$p.value, ylim=c(0,3000), main="Histogram of unadjusted p-values of differential\n gene expression between LumB breast cancers \nin Nigerian and \nTCGA white breast cancer patients\n quantile corrected")
qvals<-p.adjust(fit$p.value[,1], method='fdr')
df_limma <- data_frame(log2FoldChange = fit$coefficients[,1],
pval = fit$p.value[,1],
padj = qvals,
anno = fit$genes)
with(df_limma, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between LumB \nbreast cancers in Nigerian and \nTCGA white breast cancer patients\nquantile corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), points(log2FoldChange, -log10(padj), pch=20, col="blue"))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), textxy(log2FoldChange, -log10(padj), labs=anno$symbol, cex=.5))
df_limmaprint <- as.data.frame(df_limma)
df_limmaprint <- df_limmaprint %>% arrange(log2FoldChange) %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(abs(log2FoldChange)>0.58)
top_n(df_limmaprint, 10, log2FoldChange)
top_n(df_limmaprint, -10, log2FoldChange)
write.csv(df_limmaprint, file = "Nigerian-TCGAwhite-LumB-DE.csv", row.names = FALSE)
designNTW <- design
designNTW$sampleCondition <- ifelse (designNTW$sampleCondition=="Nigerian.LumB", 0, as.character(designNTW$sampleCondition))
designNTW$sampleCondition <- ifelse (designNTW$sampleCondition=="TCGA_black.LumB", 1, as.character(designNTW$sampleCondition))
designNTW$sampleCondition <- ifelse (designNTW$sampleCondition==0 | designNTW$sampleCondition==1, designNTW$sampleCondition, NA)
designNTW <- designNTW %>% subset(is.na(sampleCondition)==FALSE)
designNTW$Nigerian.LumB <- ifelse (designNTW$sampleCondition==0, 1, 0)
designNTW$TCGA_black.LumB <- ifelse (designNTW$sampleCondition==1, 1, 0)
designNTW$sampleCondition <- NULL
mm <- model.matrix(~0+designNTW$Nigerian.LumB+designNTW$TCGA_black.LumB)
quantids <- rownames(designNTW)
rownames(mm) <- quantids
colnames(mm) <- c("Nigerian", "TCGA_black")
quantdata <- as.data.frame(t(counts(ddsHTSeqMF)))
quantdata <- quantdata[quantids,]
quantdata <- t(quantdata)
d0 <- DGEList(counts=quantdata, genes=annotation)
cutoff <- 10
drop <- which(apply(cpm(d0), 1, max) < cutoff)
d <- d0[-drop,]
dim(d) # Number of genes after taking out low expressed genes
v=voom(d,designNTW,plot=T, normalize="quantile")
contr.matrix <- makeContrasts(NigerianvsTCGAblackLumB= Nigerian.LumB-TCGA_black.LumB, levels=colnames(designNTW))
fit <- lmFit(v, designNTW)
fit <- contrasts.fit(fit, contrasts=contr.matrix)
fit <- eBayes(fit)
dt <- decideTests(fit)
summary(dt)
hist(fit$p.value, ylim=c(0,3000), main="Histogram of unadjusted p-values of differential\n gene expression between LumB breast cancers \nin Nigerian and \nTCGA black breast cancer patients\n quantile corrected")
qvals<-p.adjust(fit$p.value[,1], method='fdr')
df_limma <- data_frame(log2FoldChange = fit$coefficients[,1],
pval = fit$p.value[,1],
padj = qvals,
anno = fit$genes)
with(df_limma, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between LumB \nbreast cancers in Nigerian and \nTCGA black breast cancer patients\nquantile corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), points(log2FoldChange, -log10(padj), pch=20, col="blue"))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), textxy(log2FoldChange, -log10(padj), labs=anno$symbol, cex=.5))
df_limmaprint <- as.data.frame(df_limma)
df_limmaprint <- df_limmaprint %>% arrange(log2FoldChange) %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(abs(log2FoldChange)>0.58)
top_n(df_limmaprint, 10, log2FoldChange)
top_n(df_limmaprint, -10, log2FoldChange)
write.csv(df_limmaprint, file = "Nigerian-TCGAblack-LumB-DE.csv", row.names = FALSE)
library(gplots)
library(ggbiplot)
library(ggplot2)
library(edgeR)
library("DESeq2")
library("RUVSeq")
library(vsn)
library("genefilter")
library(pheatmap)
library(clusterProfiler)
library(pathview)
library("AnnotationDbi")
library(checkmate)
library(affy)
library("dplyr")
library(stringi)
library("hexbin")
library("org.Hs.eg.db")
library('GenomicFeatures')
library(EnsDb.Hsapiens.v75)
library("sva")
library(limma)
library(calibrate)
library(ggfortify)
library("ashr")
library(preprocessCore)
library("BiocParallel")
library(RColorBrewer)
library(Glimma)
register(MulticoreParam(4))
setwd("~/Research-Local/RNAseq-Local/Inputs/NigerianTCGA_quants-proteincoding")
FOLDER <- "/Users/parajago/Research-Local/RNAseq-Local/Inputs/NigerianTCGA_quants-proteincoding"
sampleFiles <- grep("htseq.counts",list.files(FOLDER),value=TRUE)
sampleConditionrace <- sampleFiles
countVar2=1
for (sample in sampleConditionrace){
if (stri_detect_fixed(sample,"LIB")==TRUE){
sampleConditionrace[countVar2] <- "Nigerian"
countVar2=countVar2+1
} else if (stri_detect_fixed(sample,"black")==TRUE){
sampleConditionrace[countVar2] <- "TCGA_black"
countVar2=countVar2+1
} else if (stri_detect_fixed(sample,"white")==TRUE){
sampleConditionrace[countVar2] <- "TCGA_white"
countVar2=countVar2+1
} else{
sampleConditionrace[countVar2] <- "TCGA_other"
countVar2=countVar2+1
}
}
#Condition based on PAM50 subtype
sampleConditionPAM50 <- sampleFiles
countVar2=1
for (sample in sampleConditionPAM50){
if (stri_detect_fixed(sample,"Her2")==TRUE){
sampleConditionPAM50[countVar2] <- "Her2"
countVar2=countVar2+1
} else if (stri_detect_fixed(sample,"Basal")==TRUE){
sampleConditionPAM50[countVar2] <- "Basal"
countVar2=countVar2+1
} else if (stri_detect_fixed(sample,"LumA")==TRUE){
sampleConditionPAM50[countVar2] <- "LumA"
countVar2=countVar2+1
} else if (stri_detect_fixed(sample,"LumB")==TRUE){
sampleConditionPAM50[countVar2] <- "LumB"
countVar2=countVar2+1
} else if (stri_detect_fixed(sample,"PAMNL")==TRUE){
sampleConditionPAM50[countVar2] <- "Normal"
countVar2=countVar2+1
} else{
sampleConditionPAM50[countVar2] <- "PAM_other"
countVar2=countVar2+1
}
}
#Condition based on batch (relevant to the Nigerian patients only; no difference in batch for the TCGA patients)
batchval <- sampleFiles
countVar2=1
for (sample in batchval){
if (stri_detect_fixed(sample,"batch1")==TRUE){
batchval[countVar2] <- "batch1"
countVar2=countVar2+1
} else if (stri_detect_fixed(sample,"batch23")==TRUE){
batchval[countVar2] <- "batch23"
countVar2=countVar2+1
} else if (stri_detect_fixed(sample,"batch4")==TRUE){
batchval[countVar2] <- "batch4"
countVar2=countVar2+1
} else if (stri_detect_fixed(sample,"batch5")==TRUE){
batchval[countVar2] <- "batch5"
countVar2=countVar2+1
} else{
batchval[countVar2] <- "batchT"
countVar2=countVar2+1
}
}
table(sampleConditionrace, sampleConditionPAM50)
sampleTable2 <- data.frame(sampleName=gsub(".htseq.counts","",sampleFiles),
fileName=sampleFiles,
condition1=sampleConditionrace,
condition2=sampleConditionPAM50,
batch=batchval)
sampleTable2$sampleCondition <- paste(sampleTable2$condition1, sampleTable2$condition2, sep=".")
ddsHTSeqMF <- DESeqDataSetFromHTSeqCount(sampleTable=sampleTable2,
directory=FOLDER,
design=~sampleCondition)
ddsHTSeqMF <- ddsHTSeqMF[rowSums(counts(ddsHTSeqMF)) > 0, ] #Pre-filtering the dataset by removing the rows without information about gene expression
dds <- estimateSizeFactors(ddsHTSeqMF) #The size factor is the median ratio of the sample over a "pseudosample": for each gene, the geometric mean of all samples. This accounts for sequencing depth.
cdk4 <- "ENSG00000135446.12"
cdk6 <- "ENSG00000105810.5"
ccnd1 <- "ENSG00000110092.3"
plotCounts(dds, gene = cdk4, intgroup=c("condition1"), main="Distribution of CDK4 expression across groups (before DE analysis)")
plotCounts(dds, gene = cdk4, intgroup=c("condition2"), main="Distribution of CDK4 expression across groups (before DE analysis)")
plotCounts(dds, gene = cdk4, intgroup=c("condition1","condition2"), main="Distribution of CDK4 expression across groups (before DE analysis)")
plotCounts(dds, gene = cdk4, intgroup=c("condition1"=="Nigerian","condition2"), main="Distribution of CDK4 expression across groups (before DE analysis)")
colData
colData=condition1
plotCounts(dds, gene = cdk4, intgroup=c("condition1","condition2"), main="Distribution of CDK4 expression across groups (before DE analysis)")
plotCounts(dds, gene = cdk4, intgroup=c("Nigerian","condition2"), main="Distribution of CDK4 expression across groups (before DE analysis)")
plotCounts(dds, gene = cdk4, intgroup=c("condition1==Nigerian","condition2"), main="Distribution of CDK4 expression across groups (before DE analysis)")
plotCounts(dds, gene = cdk4, intgroup=c("condition1" if condition1=="Nigerian","condition2"), main="Distribution of CDK4 expression across groups (before DE analysis)")
plotCounts(dds, gene = cdk4, intgroup=c("condition1"), main="Distribution of CDK4 expression across groups (before DE analysis)")
plotCounts(dds, gene = cdk4, intgroup=c("condition2"), main="Distribution of CDK4 expression across groups (before DE analysis)")
plotCounts(dds, gene = cdk4, intgroup=c("sample.Condition"), main="Distribution of CDK4 expression across groups (before DE analysis)")
plotCounts(dds, gene = cdk4, intgroup=c("condition1","condition2"), main="Distribution of CDK4 expression across groups (before DE analysis)")
plotCounts(dds, gene = cdk6, intgroup=c("condition1","condition2"), main="Distribution of CDK4 expression across groups (before DE analysis)")
plotCounts(dds, gene = cdk6, intgroup=c("condition1","condition2"), main="Distribution of CDK6 expression across groups (before DE analysis)")
plotCounts(dds, gene = ccnd1, intgroup=c("condition1","condition2"), main="Distribution of CDK6 expression across groups (before DE analysis)")
plotCounts(dds, gene = ccnd1, intgroup=c("condition1","condition2"), main="Distribution of CCND1 expression across groups (before DE analysis)")
knitr::opts_chunk$set(message=FALSE, warning=FALSE)
library(gplots)
library(ggbiplot)
library(ggplot2)
library(edgeR)
library("DESeq2")
library("RUVSeq")
library(vsn)
library("genefilter")
library(pheatmap)
library(clusterProfiler)
library(pathview)
library("AnnotationDbi")
library(checkmate)
library(affy)
library("dplyr")
library(stringi)
library("hexbin")
library("org.Hs.eg.db")
library('GenomicFeatures')
library(EnsDb.Hsapiens.v75)
library("sva")
library(limma)
library(calibrate)
library(ggfortify)
library("ashr")
library(preprocessCore)
library("BiocParallel")
library(RColorBrewer)
library(Glimma)
register(MulticoreParam(4))
setwd("~/Research-Local/RNAseq-Local/Inputs/NigerianTCGA_quants-proteincoding")
FOLDER <- "/Users/parajago/Research-Local/RNAseq-Local/Inputs/NigerianTCGA_quants-proteincoding"
sampleFiles <- grep("htseq.counts",list.files(FOLDER),value=TRUE)
sampleConditionrace <- sampleFiles
countVar2=1
for (sample in sampleConditionrace){
if (stri_detect_fixed(sample,"LIB")==TRUE){
sampleConditionrace[countVar2] <- "Nigerian"
countVar2=countVar2+1
} else if (stri_detect_fixed(sample,"black")==TRUE){
sampleConditionrace[countVar2] <- "TCGA_black"
countVar2=countVar2+1
} else if (stri_detect_fixed(sample,"white")==TRUE){
sampleConditionrace[countVar2] <- "TCGA_white"
countVar2=countVar2+1
} else{
sampleConditionrace[countVar2] <- "TCGA_other"
countVar2=countVar2+1
}
}
table(sampleConditionrace)
knitr::opts_chunk$set(message=FALSE, warning=FALSE)
library(gplots)
library(ggbiplot)
library(ggplot2)
library(edgeR)
library("DESeq2")
library("RUVSeq")
library(vsn)
library("genefilter")
library(pheatmap)
library(clusterProfiler)
library(pathview)
library("AnnotationDbi")
library(checkmate)
library(affy)
library("dplyr")
library(stringi)
library("hexbin")
library("org.Hs.eg.db")
library('GenomicFeatures')
library(EnsDb.Hsapiens.v75)
library("sva")
library(limma)
library(calibrate)
library(ggfortify)
library("ashr")
library(preprocessCore)
library("BiocParallel")
library(RColorBrewer)
library(Glimma)
register(MulticoreParam(4))
setwd("~/Research-Local/RNAseq-Local/Inputs/NigerianTCGA_quants-proteincoding")
FOLDER <- "/Users/parajago/Research-Local/RNAseq-Local/Inputs/NigerianTCGA_quants-proteincoding"
sampleFiles <- grep("htseq.counts",list.files(FOLDER),value=TRUE)
sampleConditionrace <- sampleFiles
countVar2=1
for (sample in sampleConditionrace){
if (stri_detect_fixed(sample,"LIB")==TRUE){
sampleConditionrace[countVar2] <- "Nigerian"
countVar2=countVar2+1
} else if (stri_detect_fixed(sample,"black")==TRUE){
sampleConditionrace[countVar2] <- "TCGA_black"
countVar2=countVar2+1
} else if (stri_detect_fixed(sample,"white")==TRUE){
sampleConditionrace[countVar2] <- "TCGA_white"
countVar2=countVar2+1
} else{
sampleConditionrace[countVar2] <- "TCGA_other"
countVar2=countVar2+1
}
}
sampleConditionPAM50 <- sampleFiles
countVar2=1
for (sample in sampleConditionPAM50){
if (stri_detect_fixed(sample,"Her2")==TRUE){
sampleConditionPAM50[countVar2] <- "Her2"
countVar2=countVar2+1
} else if (stri_detect_fixed(sample,"Basal")==TRUE){
sampleConditionPAM50[countVar2] <- "Basal"
countVar2=countVar2+1
} else if (stri_detect_fixed(sample,"LumA")==TRUE){
sampleConditionPAM50[countVar2] <- "LumA"
countVar2=countVar2+1
} else if (stri_detect_fixed(sample,"LumB")==TRUE){
sampleConditionPAM50[countVar2] <- "LumB"
countVar2=countVar2+1
} else if (stri_detect_fixed(sample,"PAMNL")==TRUE){
sampleConditionPAM50[countVar2] <- "Normal"
countVar2=countVar2+1
} else{
sampleConditionPAM50[countVar2] <- "PAM_other"
countVar2=countVar2+1
}
}
table(sampleConditionrace, sampleConditionPAM50)
sampleTable2 <- data.frame(sampleName=gsub(".htseq.counts","",sampleFiles),
fileName=sampleFiles,
condition1=sampleConditionrace,
condition2=sampleConditionPAM50,
batch=batchval)
sampleTable2$sampleCondition <- paste(sampleTable2$condition1, sampleTable2$condition2, sep=".")
table(sampleConditionrace, sampleConditionPAM50)
sampleTable2 <- data.frame(sampleName=gsub(".htseq.counts","",sampleFiles),
fileName=sampleFiles,
condition1=sampleConditionrace,
condition2=sampleConditionPAM50,
#                          batch=batchval
)
sampleTable2$sampleCondition <- paste(sampleTable2$condition1, sampleTable2$condition2, sep=".")
