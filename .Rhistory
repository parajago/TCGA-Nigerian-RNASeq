df_limma <- data_frame(log2FoldChange = fit$coefficients[,1],
pval = fit$p.value[,1],
padj = qvals,
anno = fit$genes)
with(df_limma, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between Basal \nbreast cancers in Nigerian and TCGA black breast cancer patients\nquantile corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), points(log2FoldChange, -log10(padj), pch=20, col="blue"))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), textxy(log2FoldChange, -log10(padj), labs=anno$symbol, cex=.5))
df_limmaprint <- as.data.frame(df_limma)
df_limmaprint$foldChange <- NA
row.pos <- which(! is.na(df_limmaprint$log2FoldChange) &
df_limmaprint$log2FoldChange >= 0)
row.neg <- which(! is.na(df_limmaprint$log2FoldChange) &
df_limmaprint$log2FoldChange < 0)
df_limmaprint$foldChange[row.pos] <- 2^df_limmaprint$log2FoldChange[row.pos]
df_limmaprint$foldChange[row.neg] <- -2^((-1) * df_limmaprint$log2FoldChange[row.neg])
df_limmaprint <- df_limmaprint %>% arrange(foldChange) %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(abs(foldChange)>1.5)
top_n(df_limmaprint, 10, foldChange)
top_n(df_limmaprint, -10, foldChange)
fit$genes$status <- ifelse(fit$F.p.value<0.05,"red","black")
limma::plotMA(fit, xlab = "Average log-expression",
ylab = "Expression log-ratio (this sample vs others)", status=fit$genes$status,
main = "MA Plot of differential gene expression between basal \nbreast cancers in Nigerian and TCGA black breast cancer patients")
write.csv(df_limmaprint, file = "TCGA_black-Nigerian-Basal.csv", row.names = FALSE)
designNvsWHR <- design
designNvsWHR$sampleCondition <- ifelse (designNvsWHR$sampleCondition=="TCGA_white.LumA", 0, as.character(designNvsWHR$sampleCondition))
designNvsWHR$sampleCondition <- ifelse (designNvsWHR$sampleCondition=="Nigerian.LumA", 1, as.character(designNvsWHR$sampleCondition))
designNvsWHR$sampleCondition <- ifelse (designNvsWHR$sampleCondition==0 | designNvsWHR$sampleCondition==1, designNvsWHR$sampleCondition, NA)
designNvsWHR <- designNvsWHR %>% subset(is.na(sampleCondition)==FALSE)
designNvsWHR$TCGA_white.LumA <- ifelse (designNvsWHR$sampleCondition==0, 1, 0)
designNvsWHR$Nigerian.LumA <- ifelse (designNvsWHR$sampleCondition==1, 1, 0)
designNvsWHR$sampleCondition <- NULL
mm <- model.matrix(~0+designNvsWHR$TCGA_white.LumA+designNvsWHR$Nigerian.LumA)
quantids <- rownames(designNvsWHR)
rownames(mm) <- quantids
colnames(mm) <- c("TCGA_white", "Nigerian")
quantdata <- as.data.frame(t(counts(ddsHTSeqMF)))
quantdata <- quantdata[quantids,]
quantdata <- t(quantdata)
d0 <- DGEList(counts=quantdata, genes=annotation)
cutoff <- 10
drop <- which(apply(cpm(d0), 1, max) < cutoff)
d <- d0[-drop,]
dim(d) # Number of genes after taking out low expressed genes
v=voom(d,designNvsWHR,plot=T, normalize="quantile")
contr.matrix <- makeContrasts(TCGA_white.LumA-Nigerian.LumA, levels=colnames(designNvsWHR))
fit <- lmFit(v, designNvsWHR)
fit <- contrasts.fit(fit, contrasts=contr.matrix)
fit <- eBayes(fit)
dt <- decideTests(fit)
summary(dt)
hist(fit$p.value, ylim=c(0,3000), main="Histogram of unadjusted p-values of differential gene expression\n between HR-positive breast cancers in Nigerian and TCGA white patients\n quantile corrected")
qvals<-p.adjust(fit$p.value[,1], method='fdr')
df_limma <- data_frame(log2FoldChange = fit$coefficients[,1],
pval = fit$p.value[,1],
padj = qvals,
anno = fit$genes)
with(df_limma, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between LumA \nbreast cancers in Nigerian and TCGA white breast cancer patients\nquantile corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), points(log2FoldChange, -log10(padj), pch=20, col="blue"))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), textxy(log2FoldChange, -log10(padj), labs=anno$symbol, cex=.5))
df_limmaprint <- as.data.frame(df_limma)
df_limmaprint$foldChange <- NA
row.pos <- which(! is.na(df_limmaprint$log2FoldChange) &
df_limmaprint$log2FoldChange >= 0)
row.neg <- which(! is.na(df_limmaprint$log2FoldChange) &
df_limmaprint$log2FoldChange < 0)
df_limmaprint$foldChange[row.pos] <- 2^df_limmaprint$log2FoldChange[row.pos]
df_limmaprint$foldChange[row.neg] <- -2^((-1) * df_limmaprint$log2FoldChange[row.neg])
df_limmaprint <- df_limmaprint %>% arrange(foldChange) %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(abs(foldChange)>1.5)
top_n(df_limmaprint, 10, foldChange)
top_n(df_limmaprint, -10, foldChange)
fit$genes$status <- ifelse(fit$F.p.value<0.05,"red","black")
limma::plotMA(fit, xlab = "Average log-expression",
ylab = "Expression log-ratio (this sample vs others)", status=fit$genes$status,
main = "MA Plot of differential gene expression between LumA \nbreast cancers in Nigerian and TCGA white breast cancer patients")
write.csv(df_limmaprint, file = "TCGA_white-Nigerian-LumA.csv", row.names = FALSE)
designNvsBHR <- design
designNvsBHR$sampleCondition <- ifelse (designNvsBHR$sampleCondition=="TCGA_black.LumA", 0, as.character(designNvsBHR$sampleCondition))
designNvsBHR$sampleCondition <- ifelse (designNvsBHR$sampleCondition=="Nigerian.LumA", 1, as.character(designNvsBHR$sampleCondition))
designNvsBHR$sampleCondition <- ifelse (designNvsBHR$sampleCondition==0 | designNvsBHR$sampleCondition==1, designNvsBHR$sampleCondition, NA)
designNvsBHR <- designNvsBHR %>% subset(is.na(sampleCondition)==FALSE)
designNvsBHR$TCGA_black.LumA <- ifelse (designNvsBHR$sampleCondition==0, 1, 0)
designNvsBHR$Nigerian.LumA <- ifelse (designNvsBHR$sampleCondition==1, 1, 0)
designNvsBHR$sampleCondition <- NULL
mm <- model.matrix(~0+designNvsBHR$TCGA_black.LumA+designNvsBHR$Nigerian.LumA)
quantids <- rownames(designNvsBHR)
rownames(mm) <- quantids
colnames(mm) <- c("TCGA_black", "Nigerian")
quantdata <- as.data.frame(t(counts(ddsHTSeqMF)))
quantdata <- quantdata[quantids,]
quantdata <- t(quantdata)
d0 <- DGEList(counts=quantdata, genes=annotation)
cutoff <- 10
drop <- which(apply(cpm(d0), 1, max) < cutoff)
d <- d0[-drop,]
dim(d) # Number of genes after taking out low expressed genes
v=voom(d,designNvsBHR,plot=T, normalize="quantile")
contr.matrix <- makeContrasts(TCGA_black.LumA-Nigerian.LumA, levels=colnames(designNvsBHR))
fit <- lmFit(v, designNvsBHR)
fit <- contrasts.fit(fit, contrasts=contr.matrix)
fit <- eBayes(fit)
dt <- decideTests(fit)
summary(dt)
hist(fit$p.value, ylim=c(0,3000), main="Histogram of unadjusted p-values of differential gene expression\n between LumA breast cancers in Nigerian and TCGA black patients\n quantile corrected")
qvals<-p.adjust(fit$p.value[,1], method='fdr')
df_limma <- data_frame(log2FoldChange = fit$coefficients[,1],
pval = fit$p.value[,1],
padj = qvals,
anno = fit$genes)
with(df_limma, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between LumA \nbreast cancers in Nigerian and TCGA black breast cancer patients\nquantile corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), points(log2FoldChange, -log10(padj), pch=20, col="blue"))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), textxy(log2FoldChange, -log10(padj), labs=anno$symbol, cex=.5))
df_limmaprint <- as.data.frame(df_limma)
df_limmaprint$foldChange <- NA
row.pos <- which(! is.na(df_limmaprint$log2FoldChange) &
df_limmaprint$log2FoldChange >= 0)
row.neg <- which(! is.na(df_limmaprint$log2FoldChange) &
df_limmaprint$log2FoldChange < 0)
df_limmaprint$foldChange[row.pos] <- 2^df_limmaprint$log2FoldChange[row.pos]
df_limmaprint$foldChange[row.neg] <- -2^((-1) * df_limmaprint$log2FoldChange[row.neg])
df_limmaprint <- df_limmaprint %>% arrange(foldChange) %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(abs(foldChange)>1.5)
top_n(df_limmaprint, 10, foldChange)
top_n(df_limmaprint, -10, foldChange)
fit$genes$status <- ifelse(fit$F.p.value<0.05,"red","black")
limma::plotMA(fit, xlab = "Average log-expression",
ylab = "Expression log-ratio (this sample vs others)", status=fit$genes$status,
main = "MA Plot of differential gene expression between LumA \nbreast cancers in Nigerian and TCGA white breast cancer patients")
write.csv(df_limmaprint, file = "TCGA_black-Nigerian-LumA.csv", row.names = FALSE)
designNvsWHR <- design
designNvsWHR$sampleCondition <- ifelse (designNvsWHR$sampleCondition=="TCGA_white.LumB", 0, as.character(designNvsWHR$sampleCondition))
designNvsWHR$sampleCondition <- ifelse (designNvsWHR$sampleCondition=="Nigerian.LumB", 1, as.character(designNvsWHR$sampleCondition))
designNvsWHR$sampleCondition <- ifelse (designNvsWHR$sampleCondition==0 | designNvsWHR$sampleCondition==1, designNvsWHR$sampleCondition, NA)
designNvsWHR <- designNvsWHR %>% subset(is.na(sampleCondition)==FALSE)
designNvsWHR$TCGA_white.LumB <- ifelse (designNvsWHR$sampleCondition==0, 1, 0)
designNvsWHR$Nigerian.LumB <- ifelse (designNvsWHR$sampleCondition==1, 1, 0)
designNvsWHR$sampleCondition <- NULL
mm <- model.matrix(~0+designNvsWHR$TCGA_white.LumB+designNvsWHR$Nigerian.LumB)
quantids <- rownames(designNvsWHR)
rownames(mm) <- quantids
colnames(mm) <- c("TCGA_white", "Nigerian")
quantdata <- as.data.frame(t(counts(ddsHTSeqMF)))
quantdata <- quantdata[quantids,]
quantdata <- t(quantdata)
d0 <- DGEList(counts=quantdata, genes=annotation)
cutoff <- 10
drop <- which(apply(cpm(d0), 1, max) < cutoff)
d <- d0[-drop,]
dim(d) # Number of genes after taking out low expressed genes
v=voom(d,designNvsWHR,plot=T, normalize="quantile")
contr.matrix <- makeContrasts(TCGA_white.LumB-Nigerian.LumB, levels=colnames(designNvsWHR))
fit <- lmFit(v, designNvsWHR)
fit <- contrasts.fit(fit, contrasts=contr.matrix)
fit <- eBayes(fit)
dt <- decideTests(fit)
summary(dt)
hist(fit$p.value, ylim=c(0,3000), main="Histogram of unadjusted p-values of differential gene expression\n between LumB breast cancers in Nigerian and TCGA white patients\n quantile corrected")
qvals<-p.adjust(fit$p.value[,1], method='fdr')
df_limma <- data_frame(log2FoldChange = fit$coefficients[,1],
pval = fit$p.value[,1],
padj = qvals,
anno = fit$genes)
with(df_limma, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between LumB \nbreast cancers in Nigerian and TCGA white breast cancer patients\nquantile corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), points(log2FoldChange, -log10(padj), pch=20, col="blue"))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), textxy(log2FoldChange, -log10(padj), labs=anno$symbol, cex=.5))
df_limmaprint <- as.data.frame(df_limma)
df_limmaprint$foldChange <- NA
row.pos <- which(! is.na(df_limmaprint$log2FoldChange) &
df_limmaprint$log2FoldChange >= 0)
row.neg <- which(! is.na(df_limmaprint$log2FoldChange) &
df_limmaprint$log2FoldChange < 0)
df_limmaprint$foldChange[row.pos] <- 2^df_limmaprint$log2FoldChange[row.pos]
df_limmaprint$foldChange[row.neg] <- -2^((-1) * df_limmaprint$log2FoldChange[row.neg])
df_limmaprint <- df_limmaprint %>% arrange(foldChange) %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(abs(foldChange)>1.5)
top_n(df_limmaprint, 10, foldChange)
top_n(df_limmaprint, -10, foldChange)
fit$genes$status <- ifelse(fit$F.p.value<0.05,"red","black")
limma::plotMA(fit, xlab = "Average log-expression",
ylab = "Expression log-ratio (this sample vs others)", status=fit$genes$status,
main = "MA Plot of differential gene expression between LumB \nbreast cancers in Nigerian and TCGA white breast cancer patients")
write.csv(df_limmaprint, file = "TCGA_white-Nigerian-LumB.csv", row.names = FALSE)
designNvsBHR <- design
designNvsBHR$sampleCondition <- ifelse (designNvsBHR$sampleCondition=="TCGA_black.LumB", 0, as.character(designNvsBHR$sampleCondition))
designNvsBHR$sampleCondition <- ifelse (designNvsBHR$sampleCondition=="Nigerian.LumB", 1, as.character(designNvsBHR$sampleCondition))
designNvsBHR$sampleCondition <- ifelse (designNvsBHR$sampleCondition==0 | designNvsBHR$sampleCondition==1, designNvsBHR$sampleCondition, NA)
designNvsBHR <- designNvsBHR %>% subset(is.na(sampleCondition)==FALSE)
designNvsBHR$TCGA_black.LumB <- ifelse (designNvsBHR$sampleCondition==0, 1, 0)
designNvsBHR$Nigerian.LumB <- ifelse (designNvsBHR$sampleCondition==1, 1, 0)
designNvsBHR$sampleCondition <- NULL
mm <- model.matrix(~0+designNvsBHR$TCGA_black.LumB+designNvsBHR$Nigerian.LumB)
quantids <- rownames(designNvsBHR)
rownames(mm) <- quantids
colnames(mm) <- c("TCGA_black", "Nigerian")
quantdata <- as.data.frame(t(counts(ddsHTSeqMF)))
quantdata <- quantdata[quantids,]
quantdata <- t(quantdata)
d0 <- DGEList(counts=quantdata, genes=annotation)
cutoff <- 10
drop <- which(apply(cpm(d0), 1, max) < cutoff)
d <- d0[-drop,]
dim(d) # Number of genes after taking out low expressed genes
v=voom(d,designNvsBHR,plot=T, normalize="quantile")
contr.matrix <- makeContrasts(TCGA_black.LumB-Nigerian.LumB, levels=colnames(designNvsBHR))
fit <- lmFit(v, designNvsBHR)
fit <- contrasts.fit(fit, contrasts=contr.matrix)
fit <- eBayes(fit)
dt <- decideTests(fit)
summary(dt)
hist(fit$p.value, ylim=c(0,3000), main="Histogram of unadjusted p-values of differential gene expression\n between LumB breast cancers in Nigerian and TCGA black patients\n quantile corrected")
qvals<-p.adjust(fit$p.value[,1], method='fdr')
df_limma <- data_frame(log2FoldChange = fit$coefficients[,1],
pval = fit$p.value[,1],
padj = qvals,
anno = fit$genes)
with(df_limma, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between LumA \nbreast cancers in Nigerian and TCGA black breast cancer patients\nquantile corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), points(log2FoldChange, -log10(padj), pch=20, col="blue"))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), textxy(log2FoldChange, -log10(padj), labs=anno$symbol, cex=.5))
df_limmaprint <- as.data.frame(df_limma)
df_limmaprint$foldChange <- NA
row.pos <- which(! is.na(df_limmaprint$log2FoldChange) &
df_limmaprint$log2FoldChange >= 0)
row.neg <- which(! is.na(df_limmaprint$log2FoldChange) &
df_limmaprint$log2FoldChange < 0)
df_limmaprint$foldChange[row.pos] <- 2^df_limmaprint$log2FoldChange[row.pos]
df_limmaprint$foldChange[row.neg] <- -2^((-1) * df_limmaprint$log2FoldChange[row.neg])
df_limmaprint <- df_limmaprint %>% arrange(foldChange) %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(abs(foldChange)>1.5)
top_n(df_limmaprint, 10, foldChange)
top_n(df_limmaprint, -10, foldChange)
fit$genes$status <- ifelse(fit$F.p.value<0.05,"red","black")
limma::plotMA(fit, xlab = "Average log-expression",
ylab = "Expression log-ratio (this sample vs others)", status=fit$genes$status,
main = "MA Plot of differential gene expression between LumB \nbreast cancers in Nigerian and TCGA black breast cancer patients")
write.csv(df_limmaprint, file = "TCGA_black-Nigerian-LumB.csv", row.names = FALSE)
designNvsWHER2 <- design
designNvsWHER2$sampleCondition <- ifelse (designNvsWHER2$sampleCondition=="TCGA_white.Her2", 0, as.character(designNvsWHER2$sampleCondition))
designNvsWHER2$sampleCondition <- ifelse (designNvsWHER2$sampleCondition=="Nigerian.Her2", 1, as.character(designNvsWHER2$sampleCondition))
designNvsWHER2$sampleCondition <- ifelse (designNvsWHER2$sampleCondition==0 | designNvsWHER2$sampleCondition==1, designNvsWHER2$sampleCondition, NA)
designNvsWHER2 <- designNvsWHER2 %>% subset(is.na(sampleCondition)==FALSE)
designNvsWHER2$TCGA_white.Her2 <- ifelse (designNvsWHER2$sampleCondition==0, 1, 0)
designNvsWHER2$Nigerian.Her2 <- ifelse (designNvsWHER2$sampleCondition==1, 1, 0)
designNvsWHER2$sampleCondition <- NULL
mm <- model.matrix(~0+designNvsWHER2$TCGA_white.Her2+designNvsWHER2$Nigerian.Her2)
quantids <- rownames(designNvsWHER2)
rownames(mm) <- quantids
colnames(mm) <- c("TCGA_white", "Nigerian")
quantdata <- as.data.frame(t(counts(ddsHTSeqMF)))
quantdata <- quantdata[quantids,]
quantdata <- t(quantdata)
d0 <- DGEList(counts=quantdata, genes=annotation)
cutoff <- 10
drop <- which(apply(cpm(d0), 1, max) < cutoff)
d <- d0[-drop,]
dim(d) # Number of genes after taking out low expressed genes
v=voom(d,designNvsWHER2,plot=T, normalize="quantile")
contr.matrix <- makeContrasts(TCGA_white.Her2-Nigerian.Her2, levels=colnames(designNvsWHER2))
fit <- lmFit(v, designNvsWHER2)
fit <- contrasts.fit(fit, contrasts=contr.matrix)
fit <- eBayes(fit)
dt <- decideTests(fit)
summary(dt)
hist(fit$p.value, ylim=c(0,3000), main="Histogram of unadjusted p-values of differential gene expression\n between Her2+ breast cancers in Nigerian and TCGA white patients\n quantile corrected")
qvals<-p.adjust(fit$p.value[,1], method='fdr')
df_limma <- data_frame(log2FoldChange = fit$coefficients[,1],
pval = fit$p.value[,1],
padj = qvals,
anno = fit$genes)
with(df_limma, plot(log2FoldChange, -log10(padj), pch=20, main="Volcano plot of differential gene expression between Her2+ \nbreast cancers in Nigerian and TCGA white breast cancer patients\nquantile corrected", xlim=c(-50,50), ylim=c(0,70)))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), points(log2FoldChange, -log10(padj), pch=20, col="blue"))
with(subset(df_limma, padj<0.05 & (2^(abs(log2FoldChange))>50)), textxy(log2FoldChange, -log10(padj), labs=anno$symbol, cex=.5))
df_limmaprint <- as.data.frame(df_limma)
df_limmaprint$foldChange <- NA
row.pos <- which(! is.na(df_limmaprint$log2FoldChange) &
df_limmaprint$log2FoldChange >= 0)
row.neg <- which(! is.na(df_limmaprint$log2FoldChange) &
df_limmaprint$log2FoldChange < 0)
df_limmaprint$foldChange[row.pos] <- 2^df_limmaprint$log2FoldChange[row.pos]
df_limmaprint$foldChange[row.neg] <- -2^((-1) * df_limmaprint$log2FoldChange[row.neg])
df_limmaprint <- df_limmaprint %>% arrange(foldChange) %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(abs(foldChange)>1.5)
top_n(df_limmaprint, 10, foldChange)
top_n(df_limmaprint, -10, foldChange)
fit$genes$status <- ifelse(fit$F.p.value<0.05,"red","black")
limma::plotMA(fit, xlab = "Average log-expression",
ylab = "Expression log-ratio (this sample vs others)", status=fit$genes$status,
main = "MA Plot of differential gene expression between Her2 \nbreast cancers in Nigerian and TCGA white breast cancer patients")
write.csv(df_limmaprint, file = "TCGAwhite-Nigerian-Her2.csv", row.names = FALSE)
read.csv(file = "TCGA_white-Nigerian-Basal.csv")
pathwayNigerian-TCGAwhite-Basal <- read.csv(file = "TCGA_white-Nigerian-Basal.csv")
pathway.Nigerian.TCGAwhite.Basal <- read.csv(file = "TCGA_white-Nigerian-Basal.csv")
View(pathway.Nigerian.TCGAwhite.Basal)
pathway.Nigerian.TCGAwhite.Basal <- as.data.frame(read.csv(file = "TCGA_white-Nigerian-Basal.csv"))
diffLOHpath$ENSEMBL <- row.names(diffLOHpath)
diffLOHpath$temp <- row.names(diffLOHpath)
diffLOHpath$temp <- gsub("[.].+", "", diffLOHpath$temp)
pathway.Nigerian.TCGAwhite.Basal$log2FoldChange <- NULL
pathway.Nigerian.TCGAwhite.Basal.flt <- pathway.Nigerian.TCGAwhite.Basal[(pathway.Nigerian.TCGAwhite.Basal$foldChange > 1.5 | diffLOHpath$foldChange < -1.5),]
pathway.Nigerian.TCGAwhite.Basal.flt <- subset(pathway.Nigerian.TCGAwhite.Basal, padj < 0.05)
pathway.Nigerian.TCGAwhite.Basal.flt <- pathway.Nigerian.TCGAwhite.Basal[(pathway.Nigerian.TCGAwhite.Basal$foldChange > 1.5 | pathway.Nigerian.TCGAwhite.Basal.flt$foldChange < -1.5),]
pathway.Nigerian.TCGAwhite.Basal.flt <- subset(pathway.Nigerian.TCGAwhite.Basal, padj < 0.05)
View(designNvsW)
mm <- model.matrix(~0+designNvsW$TCGA_white.Basal+designNvsW$Nigerian.Basal)
quantids <- rownames(designNvsW)
rownames(mm) <- quantids
colnames(mm) <- c("TCGA_white", "Nigerian")
quantdata <- as.data.frame(t(counts(ddsHTSeqMF)))
quantdata <- quantdata[quantids,]
quantdata <- t(quantdata)
d0 <- DGEList(counts=quantdata, genes=annotation)
cutoff <- 10
drop <- which(apply(cpm(d0), 1, max) < cutoff)
d <- d0[-drop,]
dim(d) # Number of genes after taking out low expressed genes
v=voom(d,designNvsW,plot=T, normalize="quantile")
contr.matrix <- makeContrasts(TCGA_white.Basal-Nigerian.Basal, levels=colnames(designNvsW))
fit <- lmFit(v, designNvsW)
fit <- contrasts.fit(fit, contrasts=contr.matrix)
fit <- eBayes(fit)
dt <- decideTests(fit)
summary(dt)
mm <- model.matrix(~0+designNvsW$TCGA_white.Basal+designNvsW$Nigerian.Basal)
quantids <- rownames(designNvsW)
rownames(mm) <- quantids
colnames(mm) <- c("TCGA_white", "Nigerian")
quantdata <- as.data.frame(t(counts(ddsHTSeqMF)))
quantdata <- quantdata[quantids,]
quantdata <- t(quantdata)
d0 <- DGEList(counts=quantdata, genes=annotation)
cutoff <- 10
drop <- which(apply(cpm(d0), 1, max) < cutoff)
d <- d0[-drop,]
dim(d) # Number of genes after taking out low expressed genes
v=voom(d,designNvsW,plot=T, normalize="quantile")
contr.matrix <- makeContrasts(TCGA_white.Basal-Nigerian.Basal, levels=colnames(designNvsW))
fit <- lmFit(v, designNvsW)
fit <- contrasts.fit(fit, contrasts=contr.matrix)
fit <- eBayes(fit)
dt <- decideTests(fit)
summary(dt)
df_limma <- data_frame(log2FoldChange = fit$coefficients[,1],
pval = fit$p.value[,1],
padj = qvals,
anno = fit$genes)
pathway.Nigerian.TCGAwhite.Basal <- as.data.frame(df_limma)
df_limma <- data_frame(log2FoldChange = fit$coefficients[,1],
pval = fit$p.value[,1],
padj = p.adjust(fit$p.value[,1], method='fdr'),
anno = fit$genes)
pathway.Nigerian.TCGAwhite.Basal <- as.data.frame(df_limma)
pathway.Nigerian.TCGAwhite.Basal$foldChange <- NA
row.pos <- which(! is.na(pathway.Nigerian.TCGAwhite.Basal$log2FoldChange) &
pathway.Nigerian.TCGAwhite.Basal$log2FoldChange >= 0)
row.neg <- which(! is.na(pathway.Nigerian.TCGAwhite.Basal$log2FoldChange) &
pathway.Nigerian.TCGAwhite.Basal$log2FoldChange < 0)
pathway.Nigerian.TCGAwhite.Basal$foldChange[row.pos] <- 2^pathway.Nigerian.TCGAwhite.Basal$log2FoldChange[row.pos]
pathway.Nigerian.TCGAwhite.Basal$foldChange[row.neg] <- -2^((-1) * pathway.Nigerian.TCGAwhite.Basal$log2FoldChange[row.neg])
View(pathway.Nigerian.TCGAwhite.Basal)
pathway.Nigerian.TCGAwhite.Basal$log2FoldChange <- NULL
pathway.Nigerian.TCGAwhite.Basal$ENSEMBL <- pathway.Nigerian.TCGAwhite.Basal$anno$GeneID
pathway.Nigerian.TCGAwhite.Basal$SYMBOL <- pathway.Nigerian.TCGAwhite.Basal$anno$symbol
pathway.Nigerian.TCGAwhite.Basal$anno$GeneID <- NULL
pathway.Nigerian.TCGAwhite.Basal$anno$symbol <- NULL
pathway.Nigerian.TCGAwhite.Basal.flt <- pathway.Nigerian.TCGAwhite.Basal %>% arrange(foldChange) %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(abs(foldChange)>1.5)
View(pathway.Nigerian.TCGAwhite.Basal.flt)
genes.all <- pathway.Nigerian.TCGAwhite.Basal
genes.sig <- pathway.Nigerian.TCGAwhite.Basal.flt
View(genes.all)
View(genes.all)
genes.all$ENSEMBL <- gsub('[.]\\d+', '', genes.all$ENSEMBL, perl = TRUE)
genes.sig$ENSEMBL <- gsub('[.]\\d+', '', genes.sig$ENSEMBL, perl = TRUE)
View(genes.all)
genes.all.anno <- bitr(geneID   =  genes.all$ENSEMBL,
fromType = 'GENEID',
toType   = c('ENTREZID', 'SYMBOL'),
OrgDb    = 'EnsDb.Hsapiens.v75',
drop     = TRUE)
genes.all.anno <- genes.all.anno[
which(! duplicated(genes.all.anno$ENTREZID)), ]
row.names(genes.all.anno) <- genes.all.anno$ENTREZID
View(genes.all.anno)
genes.all.anno <- genes.all.anno[which(! duplicated(genes.all.anno$ENTREZID)), ]
row.names(genes.all.anno) <- genes.all.anno$ENTREZID
genes.all.anno <- genes.all.anno[which(!duplicated(genes.all.anno$ENTREZID)), ]
row.names(genes.all.anno) <- genes.all.anno$ENTREZID
genes.all.anno <- bitr(geneID   =  genes.all$ENSEMBL,
fromType = 'GENEID',
toType   = c('ENTREZID', 'SYMBOL'),
OrgDb    = 'EnsDb.Hsapiens.v75',
drop     = TRUE)
genes.all.anno <- genes.all.anno[which(!duplicated(genes.all.anno$ENTREZID)), ]
row.names(genes.all.anno) <- genes.all.anno$ENTREZID
genes.all.anno$ENSEMBL <- genes.all.anno$GENEID
genes.all.anno$GENEID <- NULL
genes.all.anno <- merge(genes.all.anno, genes.all, by = 'ENSEMBL')
row.names(genes.all.anno) <- genes.all.anno$ENTREZID
genes.sig.anno <- genes.all.anno[genes.all.anno$ENSEMBL %in%
genes.sig$ENSEMBL,]
gene.list <- genes.all.anno$foldChange
names(gene.list) <- genes.all.anno$ENTREZID
gene.list <- sort(gene.list, decreasing = TRUE)
ego <- enrichGO(gene          = genes.sig.anno$ENTREZID,
universe      = as.character(genes.all.anno$ENTREZID),
OrgDb         = 'org.Hs.eg.db',
ont           = "BP",
pAdjustMethod = "fdr",
pvalueCutoff  = 0.05,
readable      = TRUE)
as.data.frame(ego)
save(ego, file="GO-Nigerian-TCGAwhite-Basal.significantgenes.fdr0.05.fc1.5.enrichGO.RData")
write.csv(ego, file="GO-Nigerian-TCGAwhite-Basal.significantgenes.fdr0.05.fc1.5.enrichGO.csv")
options(jupyter.plot_mimetypes = "image/svg+xml")
options(repr.plot.width = 10, repr.plot.height = 5)
egokegg <- ego
for(i in 1:5) {
egokegg <- dropGO(egokegg, level = i)
}
p1 <- barplot(egokegg)
p2 <- dotplot(egokegg)
kk <- enrichKEGG(gene          = genes.sig.anno$ENTREZID,
universe      = as.character(genes.all.anno$ENTREZID),
organism      = "hsa",
pAdjustMethod = "fdr",
pvalueCutoff  = 0.05)
plot(p1)
plot(p2)
save(kk, file="GO-Nigerian-TCGAwhite-Basal.significantgenes.fdr0.05.fc1.5.enrichKEGG.RData")
write.csv(kk@result, file="GO-Nigerian-TCGAwhite-Basal.significantgenes.fdr0.05.fc1.5.enrichKEGG.csv")
as.data.frame(ego)
mm <- model.matrix(~0+designNvsWHER2$TCGA_white.Her2+designNvsWHER2$Nigerian.Her2)
quantids <- rownames(designNvsWHER2)
rownames(mm) <- quantids
colnames(mm) <- c("TCGA_white", "Nigerian")
quantdata <- as.data.frame(t(counts(ddsHTSeqMF)))
quantdata <- quantdata[quantids,]
quantdata <- t(quantdata)
d0 <- DGEList(counts=quantdata, genes=annotation)
cutoff <- 10
drop <- which(apply(cpm(d0), 1, max) < cutoff)
d <- d0[-drop,]
dim(d) # Number of genes after taking out low expressed genes
v=voom(d,designNvsWHER2,plot=T, normalize="quantile")
contr.matrix <- makeContrasts(TCGA_white.Her2-Nigerian.Her2, levels=colnames(designNvsWHER2))
fit <- lmFit(v, designNvsWHER2)
fit <- contrasts.fit(fit, contrasts=contr.matrix)
fit <- eBayes(fit)
dt <- decideTests(fit)
summary(dt)
qvals<-p.adjust(fit$p.value[,1], method='fdr')
df_limma <- data_frame(log2FoldChange = fit$coefficients[,1],
pval = fit$p.value[,1],
padj = qvals,
anno = fit$genes)
pathway.Nigerian.TCGAwhite.Her2 <- as.data.frame(df_limma)
pathway.Nigerian.TCGAwhite.Her2$foldChange <- NA
row.pos <- which(! is.na(pathway.Nigerian.TCGAwhite.Her2$log2FoldChange) &
pathway.Nigerian.TCGAwhite.Her2$log2FoldChange >= 0)
row.neg <- which(! is.na(pathway.Nigerian.TCGAwhite.Her2$log2FoldChange) &
pathway.Nigerian.TCGAwhite.Her2$log2FoldChange < 0)
pathway.Nigerian.TCGAwhite.Her2$foldChange[row.pos] <- 2^pathway.Nigerian.TCGAwhite.Her2$log2FoldChange[row.pos]
pathway.Nigerian.TCGAwhite.Her2$foldChange[row.neg] <- -2^((-1) * pathway.Nigerian.TCGAwhite.Her2$log2FoldChange[row.neg])
pathway.Nigerian.TCGAwhite.Her2$log2FoldChange <- NULL
pathway.Nigerian.TCGAwhite.Her2$ENSEMBL <- pathway.Nigerian.TCGAwhite.Her2$anno$GeneID
pathway.Nigerian.TCGAwhite.Her2$SYMBOL <- pathway.Nigerian.TCGAwhite.Her2$anno$symbol
pathway.Nigerian.TCGAwhite.Her2$anno$GeneID <- NULL
pathway.Nigerian.TCGAwhite.Her2$anno$symbol <- NULL
pathway.Nigerian.TCGAwhite.Her2.flt <- pathway.Nigerian.TCGAwhite.Her2 %>% arrange(foldChange) %>% dplyr::filter(padj < 0.05) %>% dplyr::filter(abs(foldChange)>1.5)
genes.all <- pathway.Nigerian.TCGAwhite.Her2
genes.sig <- pathway.Nigerian.TCGAwhite.Her2.flt
genes.all$ENSEMBL <- gsub('[.]\\d+', '', genes.all$ENSEMBL, perl = TRUE)
genes.sig$ENSEMBL <- gsub('[.]\\d+', '', genes.sig$ENSEMBL, perl = TRUE)
genes.all.anno <- bitr(geneID   =  genes.all$ENSEMBL,
fromType = 'GENEID',
toType   = c('ENTREZID', 'SYMBOL'),
OrgDb    = 'EnsDb.Hsapiens.v75',
drop     = TRUE)
genes.all.anno <- genes.all.anno[which(!duplicated(genes.all.anno$ENTREZID)), ]
row.names(genes.all.anno) <- genes.all.anno$ENTREZID
genes.all.anno$ENSEMBL <- genes.all.anno$GENEID
genes.all.anno$GENEID <- NULL
genes.all.anno <- merge(genes.all.anno, genes.all, by = 'ENSEMBL')
row.names(genes.all.anno) <- genes.all.anno$ENTREZID
genes.sig.anno <- genes.all.anno[genes.all.anno$ENSEMBL %in%
genes.sig$ENSEMBL,]
gene.list <- genes.all.anno$foldChange
names(gene.list) <- genes.all.anno$ENTREZID
gene.list <- sort(gene.list, decreasing = TRUE)
ego <- enrichGO(gene          = genes.sig.anno$ENTREZID,
universe      = as.character(genes.all.anno$ENTREZID),
OrgDb         = 'org.Hs.eg.db',
ont           = "BP",
pAdjustMethod = "fdr",
pvalueCutoff  = 0.05,
readable      = TRUE)
as.data.frame(ego)
save(ego, file="GO-Nigerian-TCGAwhite-Her2.significantgenes.fdr0.05.fc1.5.enrichGO.RData")
write.csv(ego, file="GO-Nigerian-TCGAwhite-Her2.significantgenes.fdr0.05.fc1.5.enrichGO.csv")
options(jupyter.plot_mimetypes = "image/svg+xml")
options(repr.plot.width = 10, repr.plot.height = 5)
egokegg <- ego
for(i in 1:5) {
egokegg <- dropGO(egokegg, level = i)
}
p1 <- barplot(egokegg)
p2 <- dotplot(egokegg)
kk <- enrichKEGG(gene          = genes.sig.anno$ENTREZID,
universe      = as.character(genes.all.anno$ENTREZID),
organism      = "hsa",
pAdjustMethod = "fdr",
pvalueCutoff  = 0.05)
plot(p1)
plot(p2)
save(kk, file="GO-Nigerian-TCGAwhite-Her2.significantgenes.fdr0.05.fc1.5.enrichKEGG.RData")
write.csv(kk@result, file="GO-Nigerian-TCGAwhite-Her2.significantgenes.fdr0.05.fc1.5.enrichKEGG.csv")
testgenename="ENSG00000118181.6"
dds <- estimateSizeFactors(ddsHTSeqMF)
plotCounts(dds, gene = testgenename, intgroup=c("condition1"), main="Distribution of RPS25 expression across groups (before DE analysis)")
